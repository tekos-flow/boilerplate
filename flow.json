[
    {
        "id": "5a2f52ce.f38c4c",
        "type": "tab",
        "label": "BoilerPlate Bot & Handover",
        "disabled": false,
        "info": ""
    },
    {
        "id": "dd87857a.016a18",
        "type": "tab",
        "label": "Multi- steps Actions & Notifications",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2374a395.cdc52c",
        "type": "subflow",
        "name": "Embed Widget",
        "info": "Add an embed page to the room\nGenerally, you need the **src** link from the embed code\n\n![](https://i.imgur.com/60iUKdI.png)\n\n\nHere are some sample:\n\nYoutube (embed link)\nhttps://www.youtube.com/embed/6THHrPyZQuQ\n\n\nVimeo (simple link) https://vimeo.com/105438077)\n\nGoogle Maps (get src link from embed code) https://www.google.com/maps/embed?pb=!1m28!1m12!1m3!1d1327427.7955557902!2d2.746197289197234!3d49.491721948683754!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!4m13!3e6!4m5!1s0x47e664f93278928d%3A0xc749b6b4e73d3630!2sParis%20La%20D%C3%A9fense%20Arena%2C%20Rue%20des%20Sorins%2C%20Nanterre!3m2!1d48.895279099999996!2d2.2294676!4m5!1s0x47c2d579b3256e11%3A0x40af13e81646360!2sLille!3m2!1d50.62925!2d3.0572559999999998!5e0!3m2!1sfr!2sfr!4v1585350925157!5m2!1sfr!2sfr",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "eaf43947.8ad078"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 500,
                "y": 80,
                "wires": [
                    {
                        "id": "26db8525.f1f92a",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "BASE_URL",
                "type": "env",
                "value": "BASE_URL"
            },
            {
                "name": "TOKEN",
                "type": "env",
                "value": "TEKOS_BOT_TOKEN"
            },
            {
                "name": "room_id",
                "type": "str",
                "value": ""
            },
            {
                "name": "embed_url",
                "type": "str",
                "value": "https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d49936.849320644484!2d2.3544887969226256!3d48.86807966451934!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x47e66956f8a0fb61%3A0xba79e11d5aae82a2!2s2-16%20Rue%20de%20Montmorency%2C%2093200%20Saint-Denis!5e0!3m2!1sfr!2sfr!4v1585349062176!5m2!1sfr!2sfr"
            },
            {
                "name": "iframe",
                "type": "str",
                "value": ""
            }
        ],
        "color": "#3FADB5",
        "icon": "node-red/join.svg"
    },
    {
        "id": "d21e98ba.9eb0e8",
        "type": "subflow",
        "name": "Create Contact in Pipedrive",
        "info": "# Pipedrive connection with adding contact.\n\n**pipedrive_apikey** - It's your private Apikey from Pipedrive. \n\nIt can be found on pipedrive website under **Settings** > **Personal preferences** > **API**.\n![enter image description here](https://support.pipedrive.com/hc/article_attachments/360004782498/Screen_Shot_2019-11-17_at_12.03.12_PM.png)\n\n\n---\n\n\n\n\n**msg.name** - Name of conntact you want to add\n\n**msg.email** - E-mail of conntact you want to add\n\n**msg.phone** - Phone number of conntact you want to add.",
        "category": "CRM",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "38956fc.96f289"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 560,
                "y": 80,
                "wires": [
                    {
                        "id": "aa68d9fd.366438",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "pipedrive_apikey",
                "type": "str",
                "value": ""
            }
        ],
        "color": "#DDAA99",
        "icon": "font-awesome/fa-address-book-o"
    },
    {
        "id": "5a9666c3.44c1b8",
        "type": "subflow",
        "name": "Schedule on Calendly",
        "info": "",
        "category": "tekos chatbot",
        "in": [
            {
                "x": 140,
                "y": 140,
                "wires": [
                    {
                        "id": "6e1d9790.8a7b58"
                    }
                ]
            }
        ],
        "out": [],
        "env": [
            {
                "name": "TOKEN",
                "type": "env",
                "value": "TEKOS_BOT_TOKEN"
            },
            {
                "name": "BASE_URL",
                "type": "env",
                "value": "BASE_URL"
            },
            {
                "name": "cta",
                "type": "str",
                "value": "Schedule a Meeting",
                "ui": {
                    "label": {
                        "en-US": "Call to Action"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "num",
                            "bool",
                            "json",
                            "bin",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "cal_url",
                "type": "str",
                "value": "https://calendly.com/**",
                "ui": {
                    "label": {
                        "en-US": "Calendly URL"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "num",
                            "bool",
                            "json",
                            "bin",
                            "env"
                        ]
                    }
                }
            }
        ],
        "color": "#DDAA99",
        "icon": "font-awesome/fa-calendar-plus-o"
    },
    {
        "id": "42a39ad4.ef17c4",
        "type": "subflow",
        "name": "Send Generic Message",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 120,
                "wires": [
                    {
                        "id": "bce159e9.906fb8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 560,
                "y": 120,
                "wires": [
                    {
                        "id": "e7f17f1d.93819",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "TOKEN",
                "type": "env",
                "value": "TEKOS_BOT_TOKEN"
            },
            {
                "name": "BASE_URL",
                "type": "env",
                "value": "BASE_URL"
            },
            {
                "name": "message",
                "type": "json",
                "value": "{\"body\":\"\",\"msgtype\":\"m.text\",\"calendly\":{\"url\":\"https://calendly.com/mohamedayoubghaddab/15min\",\"text\":\"Schedule time with me\"}}"
            }
        ],
        "color": "#DDAA99",
        "icon": "node-red/cog.svg"
    },
    {
        "id": "f7d437ec.9be078",
        "type": "subflow",
        "name": "Send notice",
        "info": "",
        "category": "tekos chatbot",
        "in": [
            {
                "x": 108,
                "y": 66,
                "wires": [
                    {
                        "id": "31aae4d6.44343c"
                    }
                ]
            }
        ],
        "out": [],
        "env": [
            {
                "name": "TOKEN",
                "type": "env",
                "value": "TEKOS_BOT_TOKEN"
            },
            {
                "name": "BASE_URL",
                "type": "env",
                "value": "BASE_URL"
            },
            {
                "name": "message",
                "type": "str",
                "value": "this is a sample notice"
            },
            {
                "name": "room_id",
                "type": "str",
                "value": "",
                "ui": {
                    "label": {
                        "en-US": "room_id (optional)"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "num",
                            "bool",
                            "json",
                            "bin",
                            "env"
                        ]
                    }
                }
            }
        ],
        "color": "#C0DEED",
        "icon": "node-red/alert.svg"
    },
    {
        "id": "718f9a30.f9e024",
        "type": "subflow",
        "name": "Add & Purge Events",
        "info": "",
        "category": "tekos chatbot",
        "in": [
            {
                "x": 86,
                "y": 88,
                "wires": [
                    {
                        "id": "df0129c8.bab4e8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1076,
                "y": 110,
                "wires": [
                    {
                        "id": "ee8a88f5.915638",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "operation",
                "type": "str",
                "value": "add",
                "ui": {
                    "type": "select",
                    "opts": {
                        "opts": [
                            {
                                "l": {
                                    "en-US": "add last event"
                                },
                                "v": "add"
                            },
                            {
                                "l": {
                                    "en-US": "purge all saved events"
                                },
                                "v": "purge"
                            }
                        ]
                    },
                    "label": {}
                }
            },
            {
                "name": "token",
                "type": "env",
                "value": "TEKOS_BOT_TOKEN"
            }
        ],
        "color": "#E9967A",
        "icon": "font-awesome/fa-trash-o"
    },
    {
        "id": "f013a55e.e1a408",
        "type": "subflow",
        "name": "Send Voice",
        "info": "",
        "category": "tekos chatbot",
        "in": [
            {
                "x": 160,
                "y": 80,
                "wires": [
                    {
                        "id": "c0c81d58.527a9"
                    }
                ]
            }
        ],
        "out": [],
        "env": [
            {
                "name": "token",
                "type": "env",
                "value": "BOT_TOKEN"
            },
            {
                "name": "homeserver",
                "type": "str",
                "value": "m.tekos.co"
            }
        ],
        "color": "#F3B567",
        "icon": "font-awesome/fa-file-audio-o"
    },
    {
        "id": "35341a87.145016",
        "type": "subflow",
        "name": "Human handover",
        "info": "Human handover or takeover\nInvite a Human Operator to a discussion",
        "category": "tekos chatbot",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "fae6fc99.a1391"
                    }
                ]
            }
        ],
        "out": [],
        "env": [
            {
                "name": "TOKEN",
                "type": "env",
                "value": "TEKOS_BOT_TOKEN",
                "ui": {
                    "icon": "font-awesome/fa-key",
                    "label": {},
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "num",
                            "bool",
                            "json",
                            "bin",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "Operator",
                "type": "str",
                "value": "@",
                "ui": {
                    "icon": "font-awesome/fa-address-book",
                    "label": {},
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "num",
                            "bool",
                            "json",
                            "bin",
                            "env"
                        ]
                    }
                }
            }
        ],
        "color": "#A6BBCF",
        "icon": "font-awesome/fa-male"
    },
    {
        "id": "4bce03db.cb7e2c",
        "type": "subflow",
        "name": "Send message",
        "info": "Another way to send a simple message to the room",
        "category": "tekos chatbot",
        "in": [
            {
                "x": 180,
                "y": 260,
                "wires": [
                    {
                        "id": "3e8096e5.f8a30a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 640,
                "y": 260,
                "wires": [
                    {
                        "id": "237ced56.e04722",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "TOKEN",
                "type": "env",
                "value": "TEKOS_BOT_TOKEN"
            },
            {
                "name": "BASE_URL",
                "type": "env",
                "value": "BASE_URL"
            },
            {
                "name": "message",
                "type": "str",
                "value": "Hey you 😀 "
            }
        ],
        "color": "#DAC4B4",
        "icon": "node-red-contrib-tekosbot/chatbot-waiting.png"
    },
    {
        "id": "84dde817.bd3158",
        "type": "subflow",
        "name": "Send Video",
        "info": "Send a video to a room\n\nUse the MXC link and not a simple url\n\nses how to get the MXC link: [http://bit.ly/get-mxc-link](http://bit.ly/get-mxc-link)\n",
        "category": "tekos chatbot",
        "in": [
            {
                "x": 100,
                "y": 200,
                "wires": [
                    {
                        "id": "3f194a46.8b64b6"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 600,
                "y": 200,
                "wires": [
                    {
                        "id": "71a116dc.17dec8",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "TOKEN",
                "type": "env",
                "value": "TEKOS_BOT_TOKEN"
            },
            {
                "name": "thumbnail_mxc",
                "type": "str",
                "value": ""
            },
            {
                "name": "video_mxc",
                "type": "str",
                "value": "mxc://m.tekos.co/aorJJwIuRbxgcanVFhQKemhR"
            },
            {
                "name": "BASE_URL",
                "type": "str",
                "value": "m.tekos.co"
            }
        ],
        "color": "#E9967A",
        "icon": "node-red-contrib-tekosbot/video.png"
    },
    {
        "id": "f990a5da.e78158",
        "type": "subflow",
        "name": "Typing",
        "info": "Place the typing node just before the interaction node, like text node.\nThe typing time is arount 2s but you can modify that value inside the subflow\n\n![](https://i.imgur.com/ymFjS3b.png)\n",
        "category": "tekos chatbot",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "af68f3f8.9a3fe"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 926,
                "y": 80,
                "wires": [
                    {
                        "id": "6424044f.085fac",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "TEKOS_BOT_TOKEN",
                "type": "env",
                "value": "TEKOS_BOT_TOKEN"
            },
            {
                "name": "TEKOS_BOT_ID",
                "type": "env",
                "value": "TEKOS_BOT_ID"
            },
            {
                "name": "BASE_URL",
                "type": "env",
                "value": "BASE_URL"
            }
        ],
        "color": "#96ceb4",
        "icon": "font-awesome/fa-commenting-o"
    },
    {
        "id": "cba1dc67.b8bb1",
        "type": "subflow",
        "name": "Get Stripe Notif",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "900bff6d.644e3"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 560,
                "y": 80,
                "wires": [
                    {
                        "id": "6e62eb06.c03e24",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "TOKEN",
                "type": "env",
                "value": "TEKOS_BOT_TOKEN"
            },
            {
                "name": "BASE_URL",
                "type": "env",
                "value": "BASE_URL"
            },
            {
                "name": "ROOM_ID",
                "type": "str",
                "value": ""
            }
        ],
        "color": "#C0DEED",
        "icon": "node-red-contrib-tekosbot/stripe.png"
    },
    {
        "id": "e019008a.c0745",
        "type": "subflow",
        "name": "Create Trello Card",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 160,
                "y": 360,
                "wires": [
                    {
                        "id": "67e27880.9a60f8"
                    },
                    {
                        "id": "513c2fb0.7e3a8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 952,
                "y": 301.0589962005615,
                "wires": [
                    {
                        "id": "e139af06.36994",
                        "port": 0
                    }
                ]
            },
            {
                "x": 952,
                "y": 361.0589962005615,
                "wires": [
                    {
                        "id": "e139af06.36994",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "name",
                "type": "str",
                "value": "card"
            },
            {
                "name": "desc",
                "type": "str",
                "value": "desc"
            },
            {
                "name": "key",
                "type": "str",
                "value": "3caa9c75b62187a3e041309d59bb9ae4"
            },
            {
                "name": "token",
                "type": "str",
                "value": "36fc7e0c840585054561cb7b0c21fb2bb4c60fda41f4bde2e3ab925b64dc31a5"
            },
            {
                "name": "idList",
                "type": "str",
                "value": "5e7fc059311a6b339ce1093b"
            },
            {
                "name": "idLabels",
                "type": "str",
                "value": "5e7fc0507669b225496e8175"
            },
            {
                "name": "TOKEN",
                "type": "env",
                "value": "BOT_TOKEN"
            }
        ],
        "color": "#C0DEED",
        "outputLabels": [
            "OK",
            "KO"
        ],
        "icon": "node-red-contrib-trello/trello.png"
    },
    {
        "id": "e6b13f10.8052e",
        "type": "subflow",
        "name": "Github | Get Notifs",
        "info": "",
        "category": "Project Management",
        "in": [
            {
                "x": 60,
                "y": 220,
                "wires": [
                    {
                        "id": "24203de3.6a63d2"
                    },
                    {
                        "id": "e318bc02.64922"
                    }
                ]
            }
        ],
        "out": [],
        "env": [
            {
                "name": "TOKEN",
                "type": "env",
                "value": "TEKOS_BOT_TOKEN"
            },
            {
                "name": "BASE_URL",
                "type": "env",
                "value": "BASE_URL"
            },
            {
                "name": "ROOM_ID",
                "type": "str",
                "value": ""
            }
        ],
        "color": "#DDAA99",
        "icon": "font-awesome/fa-code-fork"
    },
    {
        "id": "da280c12.ece96",
        "type": "subflow",
        "name": "Freshdesk | Get Notif",
        "info": "",
        "category": "Project Management",
        "in": [
            {
                "x": 100,
                "y": 240,
                "wires": [
                    {
                        "id": "30797f84.93acf"
                    },
                    {
                        "id": "46c453b.a0a90ac"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 240,
                "y": 360,
                "wires": [
                    {
                        "id": "da280c12.ece96",
                        "port": 0
                    }
                ]
            },
            {
                "x": 820,
                "y": 160,
                "wires": [
                    {
                        "id": "e9ba707f.95d7d",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "TOKEN",
                "type": "env",
                "value": "TEKOS_BOT_TOKEN"
            },
            {
                "name": "BASE_URL",
                "type": "env",
                "value": "BASE_URL"
            },
            {
                "name": "ROOM_ID",
                "type": "str",
                "value": ""
            }
        ],
        "color": "#C0DEED",
        "outputLabels": [
            "room notif reponse",
            "initial notif"
        ],
        "icon": "font-awesome/fa-desktop"
    },
    {
        "id": "de3dd4d3.692a88",
        "type": "subflow",
        "name": "Interaction Classifier (2)",
        "info": "[]()",
        "category": "tekos chatbot",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "7008d4c5.b1b1ac"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 660,
                "y": 20,
                "wires": [
                    {
                        "id": "a92b7c03.cad3",
                        "port": 0
                    }
                ]
            },
            {
                "x": 480,
                "y": 160,
                "wires": [
                    {
                        "id": "99211680.6c84d8",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1100,
                "y": 160,
                "wires": [
                    {
                        "id": "b270caf6.7552c8",
                        "port": 0
                    },
                    {
                        "id": "b270caf6.7552c8",
                        "port": 1
                    }
                ]
            },
            {
                "x": 300,
                "y": 140,
                "wires": [
                    {
                        "id": "d66255cc.f9ec78",
                        "port": 0
                    },
                    {
                        "id": "d66255cc.f9ec78",
                        "port": 1
                    }
                ]
            },
            {
                "x": 1280,
                "y": 340,
                "wires": [
                    {
                        "id": "b270caf6.7552c8",
                        "port": 3
                    },
                    {
                        "id": "622d2936.cb07c8",
                        "port": 0
                    }
                ]
            },
            {
                "x": 482,
                "y": 88,
                "wires": [
                    {
                        "id": "cb4a65c4.8d7068",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "Bot",
                "type": "env",
                "value": "TEKOS_BOT_ID"
            },
            {
                "name": "Token",
                "type": "env",
                "value": "TEKOS_BOT_TOKEN"
            },
            {
                "name": "Bot_name",
                "type": "env",
                "value": "BOT_NAME"
            },
            {
                "name": "BASE_URL",
                "type": "env",
                "value": "BASE_URL"
            },
            {
                "name": "TAG_ROOM",
                "type": "bool",
                "value": "true"
            },
            {
                "name": "TAG",
                "type": "str",
                "value": "APPS"
            }
        ],
        "color": "#DAC4B4",
        "inputLabels": [
            "Tekos in "
        ],
        "outputLabels": [
            "New Interaction",
            "@Bot Direct message",
            "Ditect message (user to bot)",
            "file message",
            "Pending STEP",
            ""
        ],
        "icon": "font-awesome/fa-random"
    },
    {
        "id": "d0a9b04.8c7f35",
        "type": "tekos bot",
        "z": "",
        "name": "Your Bot",
        "room": "",
        "userId": "${TEKOS_BOT_ID}",
        "accessToken": "${TEKOS_BOT_TOKEN}",
        "matrixServerURL": "https://m.tekos.co"
    },
    {
        "id": "17ed7387.d41c6c",
        "type": "tekos bot",
        "z": "",
        "name": "Your Bot",
        "room": "",
        "userId": "${TEKOS_BOT_ID}",
        "accessToken": "${TEKOS_BOT_TOKEN}",
        "matrixServerURL": "https://m.tekos.co"
    },
    {
        "id": "5ea38c2e.2f7ff4",
        "type": "dialogflowv2-token",
        "z": "",
        "name": "Tekos Bot AI"
    },
    {
        "id": "eaf43947.8ad078",
        "type": "function",
        "z": "2374a395.cdc52c",
        "name": "widget",
        "func": "if(env.get('room_id') !== null && env.get('room_id') !== '') {\nroomId= env.get('room_id')  \n\n} else {\n    \nroomId= msg.roomId\n}\n\n\n\nmsg.url = 'https://'+env.get('BASE_URL')+'/_matrix/client/r0/rooms/' +roomId+ '/state/im.vector.modular.widgets/123?access_token='+ env.get('TOKEN')\nmsg.payload={\n        type: \"m.custom\",\n        url: env.get('embed_url'),\n        //url: framesrc,\n        //url: \"https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d848283.3952925277!2d150.931975!3d-33.848244!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x6b129838f39a743f%3A0x3017d681632a850!2sSydney%20NSW%2C%20Australia!5e0!3m2!1sen!2sus!4v1585346518982!5m2!1sen!2sus\",\n        //\"url\": \"https://goo.gl/maps/hxdrpVjUSmkyp8BW9\",\n        name: \"Custom Widget\"\n}\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 80,
        "wires": [
            [
                "26db8525.f1f92a"
            ]
        ]
    },
    {
        "id": "26db8525.f1f92a",
        "type": "http request",
        "z": "2374a395.cdc52c",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 342,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "aa68d9fd.366438",
        "type": "http request",
        "z": "d21e98ba.9eb0e8",
        "name": "PipeDrive API",
        "method": "POST",
        "ret": "obj",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 400,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "38956fc.96f289",
        "type": "function",
        "z": "d21e98ba.9eb0e8",
        "name": "request pipedrive",
        "func": "\nmsg.url='https://api.pipedrive.com/v1/persons?api_token='+env.get('pipedrive_apikey')\n\nmsg.headers = {\n\"Accept\": \"application/json\",\n\"Content-Type\": \"application/x-www-form-urlencoded\"\n}\nmsg.payload = {\n    \"name\": msg.name,\n    \"email\": msg.email,\n//    \"phone\": msg.phone,\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 80,
        "wires": [
            [
                "aa68d9fd.366438"
            ]
        ],
        "info": "how to add Custom-Fields\nhttps://support.pipedrive.com/hc/en-us/articles/207228075-Custom-Fields\n\nthen get the field key and add it to the body request"
    },
    {
        "id": "6e1d9790.8a7b58",
        "type": "function",
        "z": "5a9666c3.44c1b8",
        "name": "send message",
        "func": "msg.url = \"https://\"+env.get('BASE_URL')+'/_matrix/client/r0/rooms/' +msg.roomId+ '/send/m.room.message?access_token='+env.get('TOKEN')\nmsg.headers ={\n //   \"Authorization\" : \"Bearer sk_test_LYtqjhDKfkXv3fOmb4PT4va400SSWORV4p\",\n    \"Content-type\": \"application/json\"\n}\n\n\nmsg.payload={\n\t\"body\":\"\",\n\t\"msgtype\":\"m.text\",\n      \"calendly\":{\n    \t\"url\":env.get('cal_url'),\n    \t\"text\":env.get('cta') \n    \t}\n}\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 140,
        "wires": [
            [
                "b2df1dbe.e4f51"
            ]
        ]
    },
    {
        "id": "b2df1dbe.e4f51",
        "type": "http request",
        "z": "5a9666c3.44c1b8",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 450,
        "y": 140,
        "wires": [
            [
                "9dea7e82.b34b7"
            ]
        ]
    },
    {
        "id": "9dea7e82.b34b7",
        "type": "debug",
        "z": "5a9666c3.44c1b8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 650,
        "y": 140,
        "wires": []
    },
    {
        "id": "d5adabf5.5c1138",
        "type": "subflow:d21e98ba.9eb0e8",
        "z": "5a9666c3.44c1b8",
        "name": "",
        "env": [],
        "x": 180,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "bce159e9.906fb8",
        "type": "function",
        "z": "42a39ad4.ef17c4",
        "name": "send message",
        "func": "msg.url = \"https://\"+env.get('BASE_URL')+'/_matrix/client/r0/rooms/' +msg.roomId+ '/send/m.room.message?access_token='+env.get('TOKEN')\nmsg.headers ={\n //   \"Authorization\" : \"Bearer sk_test_LYtqjhDKfkXv3fOmb4PT4va400SSWORV4p\",\n    \"Content-type\": \"application/json\"\n}\n\nmsg.payload=env.get('message')\n//msg.payload={\n      //  \"body\": env.get('message'), //\"This is an example text message\",\n       // \"msgtype\": \"m.text\"\n//}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 240,
        "y": 120,
        "wires": [
            [
                "e7f17f1d.93819"
            ]
        ]
    },
    {
        "id": "e7f17f1d.93819",
        "type": "http request",
        "z": "42a39ad4.ef17c4",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 410,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "31aae4d6.44343c",
        "type": "function",
        "z": "f7d437ec.9be078",
        "name": "notice",
        "func": "if(env.get('room_id') !== null && env.get('room_id') !== '') {\nroomId= env.get('room_id')  \n} else {\n    \nroomId= payload.roomId\n}\n\n\n\nmsg.url = 'https://'+env.get('BASE_URL')+'/_matrix/client/r0/rooms/' +roomId+ '/send/m.room.message?access_token='+ env.get('TOKEN')\nmsg.payload={\n        \"body\": env.get('message'), //2 This is an example notice\n        \"format\": \"org.matrix.custom.html\",\n        \"formatted_body\": env.get('message'),//\"This is an <strong>example</strong> notice\",\n        \"msgtype\": \"m.notice\"\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 226,
        "y": 66,
        "wires": [
            [
                "d03dc00c.fc24"
            ]
        ]
    },
    {
        "id": "d03dc00c.fc24",
        "type": "http request",
        "z": "f7d437ec.9be078",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 378,
        "y": 66,
        "wires": [
            [
                "57131aa.5d5d4e4"
            ]
        ]
    },
    {
        "id": "8b3b7ad5.cd2268",
        "type": "switch",
        "z": "718f9a30.f9e024",
        "name": "Operation ? ",
        "property": "operation",
        "propertyType": "env",
        "rules": [
            {
                "t": "eq",
                "v": "add",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "purge",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 378,
        "y": 88,
        "wires": [
            [
                "41f25514.24f52c"
            ],
            [
                "1148462.3d66cba"
            ],
            [
                "437a3831.b5e458"
            ]
        ]
    },
    {
        "id": "437a3831.b5e458",
        "type": "link out",
        "z": "718f9a30.f9e024",
        "name": "",
        "links": [],
        "x": 521,
        "y": 132,
        "wires": []
    },
    {
        "id": "41f25514.24f52c",
        "type": "switch",
        "z": "718f9a30.f9e024",
        "name": "",
        "property": "roomId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 578,
        "y": 22,
        "wires": [
            [
                "d5c767ae.c85048"
            ],
            []
        ]
    },
    {
        "id": "d5c767ae.c85048",
        "type": "switch",
        "z": "718f9a30.f9e024",
        "name": "",
        "property": "payload.eventId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 732,
        "y": 22,
        "wires": [
            [
                "ee8a88f5.915638"
            ],
            [
                "37fba205.dfa1ae"
            ]
        ]
    },
    {
        "id": "ee8a88f5.915638",
        "type": "function",
        "z": "718f9a30.f9e024",
        "name": "add event id",
        "func": "let roomId = msg.roomId.replace(/\\./g,'_')\nroomId = roomId.replace('!','');\nlet events;\nnode.warn(\"start add event id 1\")\nnode.warn(msg.payload);\nif(global.get(\"event@payload.\"+roomId)){\n    events = global.get(\"event@payload.\"+roomId);\n    events.push(msg.payload.eventId);\n    global.set(\"event@payload.\"+roomId,events);\n\n}else{\n    events = [];\n    events.push(msg.payload.eventId);\n    global.set(\"event@payload.\"+roomId,events);\n\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 906,
        "y": 22,
        "wires": [
            []
        ]
    },
    {
        "id": "df0129c8.bab4e8",
        "type": "function",
        "z": "718f9a30.f9e024",
        "name": "get operation",
        "func": "node.warn(\"get operation\");\nnode.warn(msg);\nif(!msg.payload){\n    msg.payload = {};\n}\nnode.warn(env.get(\"operation\"));\nif(env.get(\"operation\") == \"add\"){\n    msg.payload.operation = \"add\";\n    msg.payload.eventId = msg.payload.event_id;\n    return [msg,null];\n}else if(env.get(\"operation\") == \"purge\"){\n        msg.payload.operation = \"purge\";\nnode.warn(msg);\n\n    return [msg,null];\n\n}else{\n        return [null,msg];\n\n}\n",
        "outputs": 2,
        "noerr": 0,
        "x": 202,
        "y": 88,
        "wires": [
            [
                "8b3b7ad5.cd2268"
            ],
            []
        ]
    },
    {
        "id": "1148462.3d66cba",
        "type": "function",
        "z": "718f9a30.f9e024",
        "name": "delete all eventid id in room",
        "func": "node.warn(\"start delete\");\nlet roomId = msg.roomId.replace(/\\./g,'_')\nroomId = roomId.replace('!','');\n\nvar eventid = global.get(\"event@payload.\"+roomId);\nnode.warn(eventid)\nnode.warn(eventid.length);\n if(eventid){\n    for (let i = 0; i < eventid.length; i++) {\n    node.warn(eventid[i]);\n     msg.url =  \"https://m.tekos.co/_matrix/client/r0/rooms/\"+msg.roomId+\"/redact/\"+eventid[i]+\"/1?access_token=\"+env.get('token');\n     msg.payload={\"reason\": \"Indecent material\"}\n     node.send(msg);\n     }\n global.set(\"event@payload.\"+roomId,[]);\n\n }\n\n",
        "outputs": 2,
        "noerr": 0,
        "x": 670,
        "y": 88,
        "wires": [
            [
                "f983dc4f.32b9f"
            ],
            []
        ]
    },
    {
        "id": "f983dc4f.32b9f",
        "type": "http request",
        "z": "718f9a30.f9e024",
        "name": "",
        "method": "PUT",
        "ret": "obj",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 906,
        "y": 88,
        "wires": [
            [
                "ccf3aa68.fc28b8"
            ]
        ]
    },
    {
        "id": "ccf3aa68.fc28b8",
        "type": "debug",
        "z": "718f9a30.f9e024",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1062,
        "y": 66,
        "wires": []
    },
    {
        "id": "37fba205.dfa1ae",
        "type": "link out",
        "z": "718f9a30.f9e024",
        "name": "",
        "links": [],
        "x": 829,
        "y": 44,
        "wires": []
    },
    {
        "id": "e76ff838.e7abb8",
        "type": "switch",
        "z": "718f9a30.f9e024",
        "name": "",
        "property": "payload.event_id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 622,
        "y": 264,
        "wires": [
            [
                "d17f2fa.aac60d"
            ],
            [
                "765a1ab7.3ed164"
            ]
        ]
    },
    {
        "id": "dc8ddbb.ac17028",
        "type": "link in",
        "z": "718f9a30.f9e024",
        "name": "",
        "links": [],
        "x": 521,
        "y": 264,
        "wires": [
            [
                "e76ff838.e7abb8"
            ]
        ]
    },
    {
        "id": "d17f2fa.aac60d",
        "type": "function",
        "z": "718f9a30.f9e024",
        "name": "add event id",
        "func": "let roomId = msg.roomId.replace(/\\./g,'_')\nroomId = roomId.replace('!','');\nlet events;\nnode.warn(\"start add event id 2\")\nnode.warn(msg.payload);\nif(global.get(\"event@payload.\"+roomId)){\n    events = global.get(\"event@payload.\"+roomId);\n    events.push(msg.payload.event_id);\n    global.set(\"event@payload.\"+roomId,events);\n\n}else{\n    events = [];\n    events.push(msg.payload.event_id);\n    global.set(\"event@payload.\"+roomId,events);\n\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 796,
        "y": 242,
        "wires": [
            []
        ]
    },
    {
        "id": "765a1ab7.3ed164",
        "type": "switch",
        "z": "718f9a30.f9e024",
        "name": "",
        "property": "id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 798,
        "y": 308,
        "wires": [
            [
                "c4f5917f.ab938"
            ],
            []
        ]
    },
    {
        "id": "c4f5917f.ab938",
        "type": "function",
        "z": "718f9a30.f9e024",
        "name": "add event id",
        "func": "let roomId = msg.roomId.replace(/\\./g,'_')\nroomId = roomId.replace('!','');\nlet events;\nnode.warn(\"start add event id 3\")\nnode.warn(msg.id);\nif(global.get(\"event@payload.\"+roomId)){\n    events = global.get(\"event@payload.\"+roomId);\n    events.push(msg.id);\n    global.set(\"event@payload.\"+roomId,events);\n\n}else{\n    events = [];\n    events.push(msg.id);\n    global.set(\"event@payload.\"+roomId,events);\n\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 950,
        "y": 308,
        "wires": [
            []
        ]
    },
    {
        "id": "b4611a0d.e93028",
        "type": "file",
        "z": "f013a55e.e1a408",
        "name": "",
        "filename": "audio.wav",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 520,
        "y": 80,
        "wires": [
            [
                "fbc09916.ac9368"
            ]
        ]
    },
    {
        "id": "fbc09916.ac9368",
        "type": "base64",
        "z": "f013a55e.e1a408",
        "name": "",
        "action": "",
        "property": "payload",
        "x": 680,
        "y": 80,
        "wires": [
            [
                "5677a834.55a1d8"
            ]
        ]
    },
    {
        "id": "5677a834.55a1d8",
        "type": "function",
        "z": "f013a55e.e1a408",
        "name": "upload",
        "func": "msg.url = \"https://\"+env.get('homeserver')+\"/_matrix/media/r0/upload?filename=audio.wav&access_token=\"+env.get('token')\n\nvar audio = msg.payload;\nvar base64data = new Buffer(audio, 'base64');\nmsg.payload = base64data;\nmsg.headers ={\n    \"Content-type\": \"audio/wav\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 830,
        "y": 80,
        "wires": [
            [
                "dc8d4ee2.97c4c"
            ]
        ]
    },
    {
        "id": "dc8d4ee2.97c4c",
        "type": "http request",
        "z": "f013a55e.e1a408",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 970,
        "y": 80,
        "wires": [
            [
                "5a3b4540.9cbe8c"
            ]
        ]
    },
    {
        "id": "3ba0c963.793526",
        "type": "function",
        "z": "f013a55e.e1a408",
        "name": "set room",
        "func": "//msg.roomId = '!LAMIpamy.tekos.co'\nvar audiofile = msg.payload.content_uri\nvar delay = +env.get('delay')\nmsg.url = \"https://\"+env.get('homeserver')+\"/_matrix/client/r0/rooms/\"+msg.roomId+\"/send/m.room.message?access_token=\"+env.get('token')\nmsg.payload={\n      \"msgtype\": \"m.audio\",\n        \"url\": audiofile,\n     \"body\": \"audio\",\n}\nnode.warn(msg.url)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 200,
        "wires": [
            [
                "9f18e8f0.cb20e8"
            ]
        ]
    },
    {
        "id": "9f18e8f0.cb20e8",
        "type": "http request",
        "z": "f013a55e.e1a408",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 450,
        "y": 200,
        "wires": [
            [
                "f3d962ae.ce492"
            ]
        ]
    },
    {
        "id": "f3d962ae.ce492",
        "type": "debug",
        "z": "f013a55e.e1a408",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 590,
        "y": 140,
        "wires": []
    },
    {
        "id": "c0c81d58.527a9",
        "type": "ffmpeg-conversion",
        "z": "f013a55e.e1a408",
        "name": "",
        "format": "wav",
        "audiochannels": "mono",
        "x": 330,
        "y": 80,
        "wires": [
            [
                "b4611a0d.e93028"
            ]
        ]
    },
    {
        "id": "508466d.2d37f98",
        "type": "link in",
        "z": "f013a55e.e1a408",
        "name": "",
        "links": [
            "5a3b4540.9cbe8c"
        ],
        "x": 155,
        "y": 200,
        "wires": [
            [
                "3ba0c963.793526"
            ]
        ]
    },
    {
        "id": "5a3b4540.9cbe8c",
        "type": "link out",
        "z": "f013a55e.e1a408",
        "name": "",
        "links": [
            "508466d.2d37f98"
        ],
        "x": 1095,
        "y": 80,
        "wires": []
    },
    {
        "id": "9d572f85.2aaf8",
        "type": "subflow:718f9a30.f9e024",
        "z": "f013a55e.e1a408",
        "name": "",
        "env": [],
        "x": 290,
        "y": 280,
        "wires": [
            [
                "3eadd9f4.44f3d6"
            ]
        ]
    },
    {
        "id": "3eadd9f4.44f3d6",
        "type": "delay",
        "z": "f013a55e.e1a408",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 500,
        "y": 280,
        "wires": [
            [
                "88856e57.770e3"
            ]
        ]
    },
    {
        "id": "88856e57.770e3",
        "type": "subflow:718f9a30.f9e024",
        "z": "f013a55e.e1a408",
        "name": "",
        "env": [
            {
                "name": "operation",
                "value": "purge",
                "type": "str"
            }
        ],
        "x": 710,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "fae6fc99.a1391",
        "type": "function",
        "z": "35341a87.145016",
        "name": "Invite operator",
        "func": "msg.url = \"https://\"+env.get('BASE_URL')+\"/_matrix/client/r0/rooms/\"+msg.roomId+\"/invite?access_token=\"+env.get('TOKEN')\nmsg.payload={\n\n  \"user_id\": env.get('Operator')\n\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 200,
        "y": 80,
        "wires": [
            [
                "b6fddd89.85eeb"
            ]
        ]
    },
    {
        "id": "b6fddd89.85eeb",
        "type": "http request",
        "z": "35341a87.145016",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 370,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "3e8096e5.f8a30a",
        "type": "function",
        "z": "4bce03db.cb7e2c",
        "name": "send message",
        "func": "msg.url = +env.get('BASE_URL')+'/_matrix/client/r0/rooms/' +msg.roomId+ '/send/m.room.message?access_token='+env.get('TOKEN')\nmsg.headers ={\n //   \"Authorization\" : \"Bearer sk_test_LYtqjhDKfkXv3fOmb4PT4va400SSWORV4p\",\n    \"Content-type\": \"application/json\"\n}\nmsg.payload={\n        \"body\": env.get('message'), //\"This is an example text message\",\n        \"msgtype\": \"m.text\"\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 320,
        "y": 260,
        "wires": [
            [
                "237ced56.e04722"
            ]
        ]
    },
    {
        "id": "237ced56.e04722",
        "type": "http request",
        "z": "4bce03db.cb7e2c",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 520,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "3f194a46.8b64b6",
        "type": "function",
        "z": "84dde817.bd3158",
        "name": "send file name",
        "func": "msg.url = 'https://'+env.get('BASE_URL')+'/_matrix/client/r0/rooms/' +msg.roomId+ '/send/m.room.message?access_token='+ env.get('TOKEN')\nmsg.payload={\n        \"body\": \"Test\",\n        \"info\": {\n            \"duration\": 2140786,\n            \"h\": 320,\n            \"mimetype\": \"video/mp4\",\n            \"size\": 1563685,\n        },\n        \"msgtype\": \"m.video\",\n        \"url\":env.get('video_mxc'),\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 240,
        "y": 200,
        "wires": [
            [
                "71a116dc.17dec8"
            ]
        ]
    },
    {
        "id": "71a116dc.17dec8",
        "type": "http request",
        "z": "84dde817.bd3158",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 440,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "747a6e76.0fb0e",
        "type": "function",
        "z": "f990a5da.e78158",
        "name": "typing status",
        "func": "msg.url = 'https://'+env.get('BASE_URL')+'/_matrix/client/r0/rooms/' +msg.roomId+ '/typing/' +env.get('TEKOS_BOT_ID')+ '?access_token=' + env.get('TEKOS_BOT_TOKEN')\n\nmsg.headers ={\n    \"Content-type\": \"application/json\"\n}\n\nmsg.payload={\n  \"typing\": true,\n  \"timeout\": 3000\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 80,
        "wires": [
            [
                "37680a66.2f7866"
            ]
        ]
    },
    {
        "id": "37680a66.2f7866",
        "type": "http request",
        "z": "f990a5da.e78158",
        "name": "",
        "method": "PUT",
        "ret": "obj",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 610,
        "y": 80,
        "wires": [
            [
                "6424044f.085fac"
            ]
        ]
    },
    {
        "id": "6424044f.085fac",
        "type": "delay",
        "z": "f990a5da.e78158",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 780,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "af68f3f8.9a3fe",
        "type": "delay",
        "z": "f990a5da.e78158",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 240,
        "y": 80,
        "wires": [
            [
                "747a6e76.0fb0e"
            ]
        ]
    },
    {
        "id": "44c5971f.cd44a8",
        "type": "link in",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "7129bcbb.f56c34",
            "3af08c31.e96804",
            "66b71553.086d6c",
            "d6f8779d.3b3c08",
            "26f871a0.d51a3e",
            "9a1d27a5.b45738"
        ],
        "x": 855,
        "y": 280,
        "wires": [
            [
                "2bb9ecfa.4a62b4"
            ]
        ]
    },
    {
        "id": "b2197ab3.b6bda8",
        "type": "Tekos out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "bot": "17ed7387.d41c6c",
        "x": 500,
        "y": 124,
        "wires": []
    },
    {
        "id": "a7d82ca2.619c6",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "bbcc889a.3beff8"
        ],
        "x": 285,
        "y": 123,
        "wires": []
    },
    {
        "id": "5b5fbe9d.e264c",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "start",
        "links": [
            "662e9935.ecbc18",
            "1fe01b56.cad2c5"
        ],
        "x": 455,
        "y": 240,
        "wires": [],
        "info": "Link to onbording interaction"
    },
    {
        "id": "662e9935.ecbc18",
        "type": "link in",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "5b5fbe9d.e264c",
            "f98b4b4b.a06cb8"
        ],
        "x": 635,
        "y": 420,
        "wires": [
            [
                "938f783b.404a08"
            ]
        ]
    },
    {
        "id": "88b87f6c.09d44",
        "type": "chatbot-text",
        "z": "5a2f52ce.f38c4c",
        "name": "Onbording",
        "message": [
            {
                "message": "Hello, Welcome. My Name is Teksa."
            }
        ],
        "x": 894,
        "y": 420,
        "wires": [
            [
                "e9f6200e.d76c5"
            ]
        ]
    },
    {
        "id": "e9f6200e.d76c5",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "335b62a4.f6bf4e",
            "4b5a232d.4e28fc",
            "4ba13961.4ae348"
        ],
        "x": 995,
        "y": 420,
        "wires": []
    },
    {
        "id": "335b62a4.f6bf4e",
        "type": "link in",
        "z": "5a2f52ce.f38c4c",
        "name": "TekosOut",
        "links": [
            "ba7ce9c5.aace78",
            "44d5a407.d1b1dc",
            "aff76f68.3f08d",
            "79844ae8.305824",
            "e9f6200e.d76c5",
            "48323382.384d2c",
            "80533fcd.c4ae",
            "2e1a67fc.b5ab68",
            "efb78ffa.795f8",
            "9780b1b7.e2d35",
            "8e9b8033.42b7c",
            "7b50f906.830de8",
            "6019764.b9ad088",
            "8b833035.834ae",
            "700965d3.e3fc2c",
            "76c70e2e.71396",
            "4a48a08.e900e6",
            "3b135afa.ba9bf6",
            "24642811.787118",
            "26d91ab7.570356",
            "20f06907.6962d6",
            "65c21c4.f4044e4",
            "8ac227d9.f65d88",
            "13e693de.0ee42c",
            "9f869059.7c014",
            "346e2f7.6bf54d",
            "3db9cb7.b2f4634",
            "713a3fcd.c7fc7",
            "ab6c884f.043998",
            "7252c493.fa00ac",
            "423e6837.667528",
            "15c7555f.ea072b",
            "8799b02c.bda23",
            "e53db452.889128",
            "45d8540d.9a258c",
            "6ca1f2b4.965cdc",
            "51c72751.af9c98",
            "ef8cca20.204848",
            "b6e1939b.f46d7",
            "f562994f.47a488",
            "b25dd224.8228d",
            "848f70f5.b68ac",
            "a753e9ea.8444c8",
            "9a1d27a5.b45738",
            "7099eedf.f10f8",
            "bc08308.6e726d",
            "c9ea4cfb.7ba2f",
            "5e9741e3.6dba6",
            "5ca430e.c5866d",
            "7aa2a2d8.8f825c",
            "c4b32145.88b71",
            "bdb94b32.4b2fb8",
            "90754c09.2b12e",
            "c5beba23.690178",
            "916779f.feda788",
            "21467d5e.ba91c2",
            "59272024.cd32d",
            "e2f3679e.be80f8",
            "bd82a545.71abd8",
            "4a9437e7.f8a038",
            "51a60ec1.588d9",
            "48bfa5f4.246bac",
            "4687b71b.7fa6c8",
            "b597d08e.b0c7b",
            "7929bcde.f77764",
            "5f599e01.38c13",
            "4e83ab52.51dc84",
            "c1ea86ab.91c628",
            "44e53416.2e89ac",
            "5d5fa886.29ed58",
            "cc222265.74ade",
            "4e19994d.993458",
            "6984a4b2.93847c",
            "ab4f8c9e.bed59",
            "ead22a8f.61ee18",
            "70a1a76a.2b8798",
            "7cdc912b.354f7",
            "50c864e9.ce303c",
            "e8cbf7c5.403728",
            "cc443cb8.660f4",
            "e4c49a5c.8a3048",
            "6b94e86b.aeafe8",
            "6daca5bf.0593ec",
            "b2396c0.aefc698",
            "df8e0a7e.4bb988",
            "5e47bffc.f3b84",
            "c03ca3ea.235ab",
            "ae2c2da.9b56bd",
            "254660ac.f08bf",
            "fccb2d1f.89853",
            "3f1936ea.e961ca",
            "37b977be.ac61d8",
            "6c0d248.5f710dc",
            "c436ed1a.1cd1b",
            "8db8cac4.e1c108",
            "257530a7.5055c",
            "cc6962f5.b5101",
            "fae501a3.cbaa2",
            "b4fa6ba1.d7e148",
            "8cf2b507.445058",
            "f0fa6d3.208a29",
            "d8e35b30.738008"
        ],
        "x": 369,
        "y": 122,
        "wires": [
            [
                "b2197ab3.b6bda8"
            ]
        ]
    },
    {
        "id": "2f5b83ec.bdfcac",
        "type": "chatbot-generic-buttons",
        "z": "5a2f52ce.f38c4c",
        "name": "Menu",
        "buttons": [
            {
                "type": "url",
                "label": "Features",
                "url": "https://tekos.co/matrix-bot-builder/"
            },
            {
                "type": "url",
                "label": "Visit Support Center",
                "url": "https://tekos.freshdesk.com/a/solutions/articles/43000542170"
            }
        ],
        "message": "Documentation: ",
        "x": 1350,
        "y": 280,
        "wires": [
            [
                "aff76f68.3f08d"
            ]
        ]
    },
    {
        "id": "aff76f68.3f08d",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "335b62a4.f6bf4e"
        ],
        "x": 1475,
        "y": 240,
        "wires": []
    },
    {
        "id": "275ed150.bd9c9e",
        "type": "switch",
        "z": "5a2f52ce.f38c4c",
        "name": "onbording",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "menu",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "services",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "talk to human",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Contact Support",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "calendar",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "form",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "map",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "video",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "confcall",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "card",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "form",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "video",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "deploy template",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 15,
        "x": 240,
        "y": 980,
        "wires": [
            [
                "3af08c31.e96804"
            ],
            [
                "3af08c31.e96804"
            ],
            [
                "f98b4b4b.a06cb8"
            ],
            [
                "cc49ca77.4eecb8"
            ],
            [
                "cc49ca77.4eecb8"
            ],
            [
                "50798728.0ac348"
            ],
            [
                "5430ad41.f83fb4"
            ],
            [
                "f008708d.4c2b1"
            ],
            [
                "54796e28.b81cc"
            ],
            [
                "bf388d89.fdbc5"
            ],
            [
                "46140ab9.6ac004"
            ],
            [
                "ba6819c3.2f26b8"
            ],
            [
                "eb2e8e6e.48a5"
            ],
            [
                "dbf26909.12eb38"
            ],
            [
                "1b8cc747.5e3579"
            ]
        ]
    },
    {
        "id": "cc0b8089.78ea7",
        "type": "link in",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "5893370.a6ee9c8",
            "5430ad41.f83fb4"
        ],
        "x": 635,
        "y": 1040,
        "wires": [
            [
                "af44ac6c.9f3e"
            ]
        ]
    },
    {
        "id": "44d5a407.d1b1dc",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "335b62a4.f6bf4e"
        ],
        "x": 935,
        "y": 1040,
        "wires": []
    },
    {
        "id": "66b71553.086d6c",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "44c5971f.cd44a8"
        ],
        "x": 915,
        "y": 320,
        "wires": []
    },
    {
        "id": "3af08c31.e96804",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "44c5971f.cd44a8"
        ],
        "x": 475,
        "y": 820,
        "wires": []
    },
    {
        "id": "f98b4b4b.a06cb8",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "662e9935.ecbc18"
        ],
        "x": 475,
        "y": 860,
        "wires": []
    },
    {
        "id": "e4f619b.5b3f5e8",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "cf9fc026.52ef4"
        ],
        "x": 475,
        "y": 1400,
        "wires": []
    },
    {
        "id": "cc49ca77.4eecb8",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "74712369.9a7b1c",
            "146071e.c8df58e",
            "67426156.db004"
        ],
        "x": 475,
        "y": 900,
        "wires": []
    },
    {
        "id": "b95bd8f7.00c878",
        "type": "switch",
        "z": "5a2f52ce.f38c4c",
        "name": "actions",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "action 1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "action 2",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 280,
        "y": 1440,
        "wires": [
            [
                "e4f619b.5b3f5e8"
            ],
            [
                "830153ec.a3f64"
            ],
            [
                "b7e6dd05.c0f2e"
            ]
        ]
    },
    {
        "id": "830153ec.a3f64",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "1d5fd04e.ed2ce"
        ],
        "x": 475,
        "y": 1440,
        "wires": []
    },
    {
        "id": "1d5fd04e.ed2ce",
        "type": "link in",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "830153ec.a3f64",
            "50798728.0ac348"
        ],
        "x": 695,
        "y": 1580,
        "wires": [
            [
                "22941ae3.b439f6"
            ]
        ]
    },
    {
        "id": "55e5e998.206448",
        "type": "chatbot-text",
        "z": "5a2f52ce.f38c4c",
        "name": "capabilites",
        "message": [
            {
                "message": "I can can perform some small talks, i'm using an NLP library that needs to be trained. Type something, or use the options below: 😃 "
            }
        ],
        "x": 1090,
        "y": 500,
        "wires": [
            [
                "9a1d27a5.b45738"
            ]
        ]
    },
    {
        "id": "9a1d27a5.b45738",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "335b62a4.f6bf4e",
            "44c5971f.cd44a8"
        ],
        "x": 1195,
        "y": 480,
        "wires": []
    },
    {
        "id": "c83ea80f.c3c518",
        "type": "Tekos in",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "bot": "17ed7387.d41c6c",
        "x": 190,
        "y": 123,
        "wires": [
            [
                "a7d82ca2.619c6"
            ]
        ]
    },
    {
        "id": "5c166a1d.0f82b4",
        "type": "chatbot-text",
        "z": "5a2f52ce.f38c4c",
        "name": "will connect ",
        "message": [
            {
                "message": "ok, i'll try to find a human connected. \nYou can also rise a support ticket here: https://tekos.freshdesk.com/support/tickets/new\n\n"
            }
        ],
        "x": 890,
        "y": 1320,
        "wires": [
            [
                "90754c09.2b12e"
            ]
        ]
    },
    {
        "id": "90754c09.2b12e",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "677b0cc5.72afa4",
            "ae715241.a6aa1",
            "335b62a4.f6bf4e"
        ],
        "x": 1001,
        "y": 1328,
        "wires": []
    },
    {
        "id": "67426156.db004",
        "type": "link in",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "60628679.a9a3b8",
            "cc49ca77.4eecb8",
            "cb5f2660.8441d8"
        ],
        "x": 770.9999713897705,
        "y": 1319.9999103546143,
        "wires": [
            [
                "5c166a1d.0f82b4"
            ]
        ]
    },
    {
        "id": "bbcc889a.3beff8",
        "type": "link in",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "a7d82ca2.619c6"
        ],
        "x": 155,
        "y": 280,
        "wires": [
            [
                "373c9327.6b05fc"
            ]
        ]
    },
    {
        "id": "cf9fc026.52ef4",
        "type": "link in",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "e4f619b.5b3f5e8",
            "c939c4e7.7e3238",
            "9e9ce9fa.f46ae8",
            "87fec19b.2393a",
            "f860a85e.919d08"
        ],
        "x": 663,
        "y": 1304,
        "wires": [
            []
        ]
    },
    {
        "id": "772fba07.826184",
        "type": "link in",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "ac637e20.539e",
            "b7e6dd05.c0f2e"
        ],
        "x": 95,
        "y": 620,
        "wires": [
            [
                "d0d62b78.87fb58",
                "fdef92eb.1fb03"
            ]
        ]
    },
    {
        "id": "1b8cc747.5e3579",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "abfebf8f.0fea7"
        ],
        "x": 475,
        "y": 1260,
        "wires": []
    },
    {
        "id": "abfebf8f.0fea7",
        "type": "link in",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "1b8cc747.5e3579"
        ],
        "x": 155,
        "y": 1440,
        "wires": [
            [
                "b95bd8f7.00c878"
            ]
        ]
    },
    {
        "id": "9db1d45b.ea3728",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "a8eb7f3d.9f345"
        ],
        "x": 455,
        "y": 280,
        "wires": []
    },
    {
        "id": "a8eb7f3d.9f345",
        "type": "link in",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "9db1d45b.ea3728",
            "aaac7a2a.fe3f58"
        ],
        "x": 107,
        "y": 989,
        "wires": [
            [
                "275ed150.bd9c9e"
            ]
        ]
    },
    {
        "id": "b7e6dd05.c0f2e",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "b1200440.54a4e8",
            "772fba07.826184"
        ],
        "x": 475,
        "y": 1480,
        "wires": []
    },
    {
        "id": "e31871f8.48a06",
        "type": "chatbot-generic-buttons",
        "z": "5a2f52ce.f38c4c",
        "name": "Menu",
        "buttons": [
            {
                "type": "postback",
                "label": "cards",
                "value": "card",
                "alert": false
            },
            {
                "type": "postback",
                "label": "video",
                "value": "video",
                "alert": false
            },
            {
                "type": "postback",
                "label": "form",
                "value": "form",
                "alert": false
            },
            {
                "type": "postback",
                "label": "meeting",
                "value": "calendar",
                "alert": false
            },
            {
                "type": "postback",
                "label": "payment",
                "value": "payment",
                "alert": false
            }
        ],
        "message": "Some Rich components:",
        "x": 1170,
        "y": 280,
        "wires": [
            [
                "b2396c0.aefc698",
                "2f5b83ec.bdfcac"
            ]
        ]
    },
    {
        "id": "b2396c0.aefc698",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "335b62a4.f6bf4e"
        ],
        "x": 1255,
        "y": 220,
        "wires": []
    },
    {
        "id": "4ba13961.4ae348",
        "type": "link in",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "aff23b44.afa338",
            "8dbc066a.1ddb08",
            "e9f6200e.d76c5"
        ],
        "x": 995,
        "y": 500,
        "wires": [
            [
                "55e5e998.206448"
            ]
        ]
    },
    {
        "id": "dbf26909.12eb38",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "51848f1c.38d28"
        ],
        "x": 475,
        "y": 1220,
        "wires": []
    },
    {
        "id": "93342407.3b44b8",
        "type": "chatbot-text",
        "z": "5a2f52ce.f38c4c",
        "name": "emoji",
        "message": [
            {
                "message": "🤗"
            }
        ],
        "x": 1270,
        "y": 500,
        "wires": [
            [
                "c436ed1a.1cd1b"
            ]
        ]
    },
    {
        "id": "c436ed1a.1cd1b",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "335b62a4.f6bf4e"
        ],
        "x": 1355,
        "y": 480,
        "wires": []
    },
    {
        "id": "2bb9ecfa.4a62b4",
        "type": "chatbot-text",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "message": [
            {
                "message": "This is the main Menu 😎 "
            }
        ],
        "x": 980,
        "y": 280,
        "wires": [
            [
                "8db8cac4.e1c108",
                "e31871f8.48a06"
            ]
        ]
    },
    {
        "id": "8db8cac4.e1c108",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "335b62a4.f6bf4e",
            "4b5a232d.4e28fc"
        ],
        "x": 1075,
        "y": 260,
        "wires": []
    },
    {
        "id": "35e194b.bb7a86c",
        "type": "comment",
        "z": "5a2f52ce.f38c4c",
        "name": "Use NLP service",
        "info": "",
        "x": 340,
        "y": 1500,
        "wires": []
    },
    {
        "id": "938f783b.404a08",
        "type": "subflow:f990a5da.e78158",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "env": [],
        "x": 750,
        "y": 420,
        "wires": [
            [
                "88b87f6c.09d44"
            ]
        ]
    },
    {
        "id": "47cf49ae.f4f1d8",
        "type": "link in",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "5893370.a6ee9c8"
        ],
        "x": 95,
        "y": 680,
        "wires": [
            [
                "10c49789.f8d3b8"
            ]
        ]
    },
    {
        "id": "10c49789.f8d3b8",
        "type": "chatbot-text",
        "z": "5a2f52ce.f38c4c",
        "name": "Fallback",
        "message": [
            {
                "message": "Désolé je n'ai pas compris votre message 😃"
            },
            {
                "message": "Je suis encore un bot"
            }
        ],
        "x": 220,
        "y": 700,
        "wires": [
            [
                "7c3ee256.edf0fc"
            ]
        ]
    },
    {
        "id": "7c3ee256.edf0fc",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "bbf29bc7.eb9a88"
        ],
        "x": 324.0000286102295,
        "y": 700.0000896453857,
        "wires": []
    },
    {
        "id": "d0d62b78.87fb58",
        "type": "dialogflowv2",
        "z": "5a2f52ce.f38c4c",
        "dialogflow": "5ea38c2e.2f7ff4",
        "language": "en",
        "debug": false,
        "variable": "topic",
        "x": 234,
        "y": 642,
        "wires": [
            [
                "fbd1a51.10e7f58"
            ]
        ]
    },
    {
        "id": "ff91fea6.f3319",
        "type": "switch",
        "z": "5a2f52ce.f38c4c",
        "name": "action",
        "property": "_dialogflow.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "show_menu",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "give_capabilities",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "handover_request",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "invite_to_room",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 530,
        "y": 620,
        "wires": [
            [
                "4561a91c.1d4e28"
            ],
            [
                "724bba01.645094"
            ],
            [
                "7b300298.b8e40c"
            ],
            [
                "5d6dbcea.b54c04"
            ],
            [
                "37416430.d60b7c"
            ]
        ]
    },
    {
        "id": "37416430.d60b7c",
        "type": "change",
        "z": "5a2f52ce.f38c4c",
        "name": "msg",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "_dialogflow.fulfillmentMessages[0].text.text[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 715,
        "y": 680,
        "wires": [
            [
                "ebc439cc.0f24f8"
            ]
        ],
        "l": false
    },
    {
        "id": "4561a91c.1d4e28",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "eefdb4c9.9bd638"
        ],
        "x": 715,
        "y": 500,
        "wires": []
    },
    {
        "id": "724bba01.645094",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "bafe1309.ead79",
            "fcda4a3b.dab258"
        ],
        "x": 715,
        "y": 538,
        "wires": []
    },
    {
        "id": "7b300298.b8e40c",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "307a2e8c.dc52b2"
        ],
        "x": 715,
        "y": 560,
        "wires": []
    },
    {
        "id": "5354f6b5.0b4018",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "5dc70f13.28596"
        ],
        "x": 715,
        "y": 642,
        "wires": []
    },
    {
        "id": "5d6dbcea.b54c04",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "b3cc5e8b.75542"
        ],
        "x": 715,
        "y": 600,
        "wires": []
    },
    {
        "id": "ebc439cc.0f24f8",
        "type": "chatbot-text",
        "z": "5a2f52ce.f38c4c",
        "name": "fullfillment message",
        "message": [
            {
                "message": ""
            }
        ],
        "x": 850,
        "y": 680,
        "wires": [
            [
                "cc6962f5.b5101"
            ]
        ]
    },
    {
        "id": "cc6962f5.b5101",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "bbf29bc7.eb9a88",
            "335b62a4.f6bf4e",
            "99f814c2.29f208"
        ],
        "x": 975,
        "y": 680,
        "wires": []
    },
    {
        "id": "fbd1a51.10e7f58",
        "type": "subflow:f990a5da.e78158",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "env": [],
        "x": 394,
        "y": 642,
        "wires": [
            [
                "ff91fea6.f3319"
            ]
        ]
    },
    {
        "id": "50798728.0ac348",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "1d5fd04e.ed2ce"
        ],
        "x": 475,
        "y": 940,
        "wires": []
    },
    {
        "id": "3ac66eca.caf222",
        "type": "subflow:84dde817.bd3158",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "env": [
            {
                "name": "video_mxc",
                "value": "mxc://m.tekos.co/KwSmWtEufEhZciiyMCtmCrqE",
                "type": "str"
            }
        ],
        "x": 790,
        "y": 1380,
        "wires": [
            [
                "d140ca27.740f08"
            ]
        ]
    },
    {
        "id": "48273c45.e99ab4",
        "type": "subflow:4bce03db.cb7e2c",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "env": [],
        "x": 800,
        "y": 1500,
        "wires": [
            [
                "d140ca27.740f08"
            ]
        ]
    },
    {
        "id": "a87a8bb5.8f4628",
        "type": "subflow:35341a87.145016",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "env": [
            {
                "name": "Operator",
                "value": "@miled.essaafi:m.tekos.co",
                "type": "str"
            }
        ],
        "x": 770,
        "y": 380,
        "wires": []
    },
    {
        "id": "6edfab1d.95fa24",
        "type": "template",
        "z": "5a2f52ce.f38c4c",
        "name": "Expressive SSML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<express-as type=\"GoodNews\">\n {{payload.content}}\n</express-as>",
        "output": "str",
        "x": 870,
        "y": 740,
        "wires": [
            [
                "fbe7c27a.891b7"
            ]
        ]
    },
    {
        "id": "fbe7c27a.891b7",
        "type": "watson-text-to-speech",
        "z": "5a2f52ce.f38c4c",
        "name": "Tekos TTS",
        "lang": "en-US",
        "langhidden": "en-US",
        "langcustom": "NoCustomisationSetting",
        "langcustomhidden": "",
        "voice": "en-US_AllisonVoice",
        "voicehidden": "en-US_AllisonVoice",
        "format": "audio/mp3",
        "password": "Miloud4!",
        "apikey": "iQpk9TQqv-HW6oFDQkuWFtU_yeb9C76F0mXoK3vLrmJt",
        "payload-response": true,
        "service-endpoint": "https://stream-fra.watsonplatform.net/text-to-speech/api",
        "x": 1050,
        "y": 740,
        "wires": [
            [
                "443247a2.d09678"
            ]
        ]
    },
    {
        "id": "443247a2.d09678",
        "type": "subflow:f013a55e.e1a408",
        "z": "5a2f52ce.f38c4c",
        "name": "Send Audio",
        "env": [
            {
                "name": "token",
                "value": "TEKOS_BOT_TOKEN",
                "type": "env"
            },
            {
                "name": "room_id",
                "value": "!LAMIpamyCBxUOVQhii:m.tekos.co",
                "type": "str"
            }
        ],
        "x": 1210,
        "y": 740,
        "wires": []
    },
    {
        "id": "442b7ff8.b9202",
        "type": "comment",
        "z": "5a2f52ce.f38c4c",
        "name": "https://console.bluemix.net/docs/services/text-to-speech/SSML-expressive.html",
        "info": "",
        "x": 1080,
        "y": 860,
        "wires": []
    },
    {
        "id": "d4e441b.a1aa5c",
        "type": "comment",
        "z": "5a2f52ce.f38c4c",
        "name": "<express-as type=\"GoodNews\">   I have good news: I was able to reduce the payments on your monthly bill! </express-as>",
        "info": "",
        "x": 1210,
        "y": 900,
        "wires": []
    },
    {
        "id": "f457d97a.713468",
        "type": "comment",
        "z": "5a2f52ce.f38c4c",
        "name": "or Link to Audio out (NR Dashbaord)",
        "info": "",
        "x": 940,
        "y": 820,
        "wires": []
    },
    {
        "id": "99f814c2.29f208",
        "type": "link in",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "cc6962f5.b5101"
        ],
        "x": 695,
        "y": 740,
        "wires": [
            [
                "6edfab1d.95fa24"
            ]
        ]
    },
    {
        "id": "5b1a186e.10ac28",
        "type": "subflow:f7d437ec.9be078",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "env": [],
        "x": 790,
        "y": 1420,
        "wires": []
    },
    {
        "id": "d140ca27.740f08",
        "type": "debug",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1010,
        "y": 1460,
        "wires": []
    },
    {
        "id": "82bf9e12.4752e",
        "type": "subflow:42a39ad4.ef17c4",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "env": [],
        "x": 800,
        "y": 1460,
        "wires": [
            [
                "d140ca27.740f08"
            ]
        ]
    },
    {
        "id": "22941ae3.b439f6",
        "type": "subflow:5a9666c3.44c1b8",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "env": [
            {
                "name": "cal_url",
                "value": "mohamedayoubghaddab/15min",
                "type": "str"
            }
        ],
        "x": 840,
        "y": 1580,
        "wires": []
    },
    {
        "id": "1fe01b56.cad2c5",
        "type": "link in",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "5b5fbe9d.e264c"
        ],
        "x": 635,
        "y": 380,
        "wires": [
            [
                "a87a8bb5.8f4628"
            ]
        ]
    },
    {
        "id": "fdef92eb.1fb03",
        "type": "debug",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 294,
        "y": 602,
        "wires": []
    },
    {
        "id": "9797dd7.e39122",
        "type": "subflow:35341a87.145016",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "env": [
            {
                "name": "Operator",
                "value": "@spo1:m.tekos.co",
                "type": "str"
            }
        ],
        "x": 770,
        "y": 340,
        "wires": []
    },
    {
        "id": "5430ad41.f83fb4",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "ecd16c84.6ce7",
            "d55616a.01a29e8",
            "cc0b8089.78ea7"
        ],
        "x": 475,
        "y": 980,
        "wires": []
    },
    {
        "id": "e2a69f7f.fc1c1",
        "type": "link in",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "f008708d.4c2b1"
        ],
        "x": 695,
        "y": 1640,
        "wires": [
            [
                "281f7676.3b025a"
            ]
        ]
    },
    {
        "id": "f008708d.4c2b1",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "e2a69f7f.fc1c1"
        ],
        "x": 475,
        "y": 1020,
        "wires": []
    },
    {
        "id": "281f7676.3b025a",
        "type": "subflow:2374a395.cdc52c",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "env": [
            {
                "name": "embed_url",
                "value": "https://www.google.com/maps/embed?pb=!1m28!1m12!1m3!1d1327427.7955557902!2d2.746197289197234!3d49.491721948683754!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!4m13!3e6!4m5!1s0x47e664f93278928d%3A0xc749b6b4e73d3630!2sParis%20La%20D%C3%A9fense%20Arena%2C%20Rue%20des%20Sorins%2C%20Nanterre!3m2!1d48.895279099999996!2d2.2294676!4m5!1s0x47c2d579b3256e11%3A0x40af13e81646360!2sLille!3m2!1d50.62925!2d3.0572559999999998!5e0!3m2!1sfr!2sfr!4v1585350925157!5m2!1sfr!2sfr",
                "type": "str"
            },
            {
                "name": "iframe",
                "value": "<iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d49936.849320644484!2d2.3544887969226256!3d48.86807966451934!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x47e66956f8a0fb61%3A0xba79e11d5aae82a2!2s2-16%20Rue%20de%20Montmorency%2C%2093200%20Saint-Denis!5e0!3m2!1sfr!2sfr!4v1585349062176!5m2!1sfr!2sfr\" width=\"600\" height=\"450\" frameborder=\"0\" style=\"border:0;\" allowfullscreen=\"\" aria-hidden=\"false\" tabindex=\"0\"></iframe>",
                "type": "str"
            },
            {
                "name": "widget_url",
                "value": "https://www.youtube.com/embed/6THHrPyZQuQ",
                "type": "str"
            }
        ],
        "x": 820,
        "y": 1640,
        "wires": [
            [
                "68607361.85d2bc"
            ]
        ]
    },
    {
        "id": "68607361.85d2bc",
        "type": "debug",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 970,
        "y": 1640,
        "wires": []
    },
    {
        "id": "54796e28.b81cc",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "1909e84b.08cc48",
            "70d11798.029f48"
        ],
        "x": 475,
        "y": 1060,
        "wires": []
    },
    {
        "id": "1909e84b.08cc48",
        "type": "link in",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "54796e28.b81cc"
        ],
        "x": 695,
        "y": 1740,
        "wires": [
            [
                "218c4ada.d847b6"
            ]
        ]
    },
    {
        "id": "218c4ada.d847b6",
        "type": "subflow:2374a395.cdc52c",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "env": [
            {
                "name": "embed_url",
                "value": "https://www.youtube.com/embed/6THHrPyZQuQ",
                "type": "str"
            },
            {
                "name": "iframe",
                "value": "<iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d49936.849320644484!2d2.3544887969226256!3d48.86807966451934!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x47e66956f8a0fb61%3A0xba79e11d5aae82a2!2s2-16%20Rue%20de%20Montmorency%2C%2093200%20Saint-Denis!5e0!3m2!1sfr!2sfr!4v1585349062176!5m2!1sfr!2sfr\" width=\"600\" height=\"450\" frameborder=\"0\" style=\"border:0;\" allowfullscreen=\"\" aria-hidden=\"false\" tabindex=\"0\"></iframe>",
                "type": "str"
            },
            {
                "name": "widget_url",
                "value": "https://www.youtube.com/embed/6THHrPyZQuQ",
                "type": "str"
            }
        ],
        "x": 840,
        "y": 1740,
        "wires": [
            [
                "5a6a80c6.8411b"
            ]
        ]
    },
    {
        "id": "5a6a80c6.8411b",
        "type": "debug",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 990,
        "y": 1740,
        "wires": []
    },
    {
        "id": "bf388d89.fdbc5",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "bc89d8b3.fac518",
            "70d11798.029f48"
        ],
        "x": 475,
        "y": 1100,
        "wires": []
    },
    {
        "id": "bc89d8b3.fac518",
        "type": "link in",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "bf388d89.fdbc5"
        ],
        "x": 735,
        "y": 1860,
        "wires": [
            [
                "da9181b2.67197"
            ]
        ]
    },
    {
        "id": "da9181b2.67197",
        "type": "chatbot-text",
        "z": "5a2f52ce.f38c4c",
        "name": "will connect ",
        "message": [
            {
                "message": "This is your link for your meeting\nShare it with your team members, they don't need to signup.\nYou can set a password if you need to lock the room\nhttps://conf.tekos.co/test\n\n"
            }
        ],
        "x": 870,
        "y": 1860,
        "wires": [
            [
                "f0fa6d3.208a29"
            ]
        ]
    },
    {
        "id": "f0fa6d3.208a29",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "677b0cc5.72afa4",
            "ae715241.a6aa1",
            "335b62a4.f6bf4e"
        ],
        "x": 1035,
        "y": 1860,
        "wires": []
    },
    {
        "id": "900bff6d.644e3",
        "type": "function",
        "z": "cba1dc67.b8bb1",
        "name": "send message",
        "func": "msg.url = \"https://\"+env.get('BASE_URL')+'/_matrix/client/r0/rooms/' +env.get('ROOM_ID')+ '/send/m.room.message?access_token='+env.get('TOKEN')\nmsg.headers ={\n //   \"Authorization\" : \"Bearer sk_test_LYtqjhDKfkXv3fOmb4PT4va400SSWORV4p\",\n    \"Content-type\": \"application/json\"\n}\nmsg.payload={\n        \"body\": \"A new Stripe Event related to customer:  \"+msg.payload.data.object.name, //\"This is an example text message\",\n        \"msgtype\": \"m.text\"\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 200,
        "y": 80,
        "wires": [
            [
                "6e62eb06.c03e24"
            ]
        ]
    },
    {
        "id": "6e62eb06.c03e24",
        "type": "http request",
        "z": "cba1dc67.b8bb1",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 400,
        "y": 80,
        "wires": [
            [
                "982a5acc.ee38b8"
            ]
        ]
    },
    {
        "id": "982a5acc.ee38b8",
        "type": "debug",
        "z": "cba1dc67.b8bb1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 610,
        "y": 140,
        "wires": []
    },
    {
        "id": "a4e892a5.9bc84",
        "type": "function",
        "z": "e019008a.c0745",
        "name": "Http request template",
        "func": "if(env.get('room_id') !== null && env.get('room_id') !== '') {\nroomId= env.get('room_id')  \n} else {\n    \nroomId= msg.roomId\n}\n\n\n//Request URL (you will define the endpoitn later)\nmsg.url = 'https://api.trello.com/1/cards?name='+env.get('name')+'&desc='+env.get('desc')+'&idList='+env.get('idList')+'&idLabels='+env.get('idLabels')+'&keepFromSource=all&key='+env.get('key')+'&token='+env.get('token')\n\n//Header\nmsg.headers ={\n//    \"Authorization\" : \"Bearer \"+env.get(\"STRIPE_SEC_KEY\"),\n//    \"Content-type\": \"application/x-www-form-urlencoded\"\n}\n\n\n//Body\nmsg.payload={\n\n//  \"displayname\": env.get('NAME')\n\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 320,
        "wires": [
            [
                "c6dae5f4.698cb8"
            ]
        ]
    },
    {
        "id": "c6dae5f4.698cb8",
        "type": "http request",
        "z": "e019008a.c0745",
        "name": "POST",
        "method": "POST",
        "ret": "obj",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 610,
        "y": 320,
        "wires": [
            [
                "e139af06.36994"
            ]
        ]
    },
    {
        "id": "e139af06.36994",
        "type": "switch",
        "z": "e019008a.c0745",
        "name": "",
        "property": "payload.url",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 822,
        "y": 321.0589962005615,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "67e27880.9a60f8",
        "type": "debug",
        "z": "e019008a.c0745",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 370,
        "y": 260,
        "wires": []
    },
    {
        "id": "513c2fb0.7e3a8",
        "type": "function",
        "z": "e019008a.c0745",
        "name": "Http request template",
        "func": "if(env.get('room_id') !== null && env.get('room_id') !== '') {\nroomId= env.get('room_id')  \n} else {\n    \nroomId= msg.roomId\n}\n\n\n//Request URL (you will define the endpoitn later)\nmsg.url = 'https://api.trello.com/1/cards?name='+msg.name+'&desc='+env.get('desc')+'&idList='+env.get('idList')+'&idLabels='+env.get('idLabels')+'&keepFromSource=all&key='+env.get('key')+'&token='+env.get('token')\n\n//Header\nmsg.headers ={\n//    \"Authorization\" : \"Bearer \"+env.get(\"STRIPE_SEC_KEY\"),\n//    \"Content-type\": \"application/x-www-form-urlencoded\"\n}\n\n\n//Body\nmsg.payload={\n\n//  \"displayname\": env.get('NAME')\n\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 400,
        "wires": [
            [
                "c6dae5f4.698cb8"
            ]
        ]
    },
    {
        "id": "1e5866f.75aee99",
        "type": "function",
        "z": "e6b13f10.8052e",
        "name": "send message",
        "func": "msg.url = \"https://\"+env.get('BASE_URL')+'/_matrix/client/r0/rooms/' +env.get('ROOM_ID')+ '/send/m.room.message?access_token='+env.get('TOKEN')\nmsg.headers ={\n //   \"Authorization\" : \"Bearer sk_test_LYtqjhDKfkXv3fOmb4PT4va400SSWORV4p\",\n    \"Content-type\": \"application/json\"\n}\nmsg.payload={\n        \"body\": \"A new github issue is created:  \"+msg.issue_subject, //\"This is an example text message\",\n        \"msgtype\": \"m.text\"\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 440,
        "wires": [
            [
                "f3092b47.ae4ca8"
            ]
        ]
    },
    {
        "id": "f3092b47.ae4ca8",
        "type": "http request",
        "z": "e6b13f10.8052e",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 700,
        "y": 440,
        "wires": [
            [
                "c61b2585.557ce8"
            ]
        ]
    },
    {
        "id": "70c70904.e6f3b8",
        "type": "function",
        "z": "e6b13f10.8052e",
        "name": "send message",
        "func": "msg.url = \"https://\"+env.get('BASE_URL')+'/_matrix/client/r0/rooms/' +env.get('ROOM_ID')+ '/send/m.room.message?access_token='+env.get('TOKEN')\nmsg.headers ={\n //   \"Authorization\" : \"Bearer sk_test_LYtqjhDKfkXv3fOmb4PT4va400SSWORV4p\",\n    \"Content-type\": \"application/json\"\n}\nmsg.payload={\n        \"body\": \"Issue url:  \"+msg.issue_url, //\"This is an example text message\",\n        \"msgtype\": \"m.text\"\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 480,
        "wires": [
            [
                "f3092b47.ae4ca8"
            ]
        ]
    },
    {
        "id": "17eadb29.318645",
        "type": "delay",
        "z": "e6b13f10.8052e",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 355,
        "y": 480,
        "wires": [
            [
                "70c70904.e6f3b8"
            ]
        ],
        "l": false
    },
    {
        "id": "137c30e9.90266f",
        "type": "change",
        "z": "e6b13f10.8052e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "issue_subject",
                "pt": "msg",
                "to": "payload.issue.title",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "issue_url",
                "pt": "msg",
                "to": "payload.issue.html_url",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 440,
        "wires": [
            [
                "1e5866f.75aee99",
                "17eadb29.318645"
            ]
        ]
    },
    {
        "id": "c61b2585.557ce8",
        "type": "debug",
        "z": "e6b13f10.8052e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 890,
        "y": 440,
        "wires": []
    },
    {
        "id": "24203de3.6a63d2",
        "type": "http response",
        "z": "e6b13f10.8052e",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 160,
        "y": 180,
        "wires": []
    },
    {
        "id": "e318bc02.64922",
        "type": "switch",
        "z": "e6b13f10.8052e",
        "name": "",
        "property": "payload.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "opened",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 150,
        "y": 220,
        "wires": [
            [
                "14d733a8.cacc8c"
            ],
            [
                "4d82c775.4ce398"
            ]
        ]
    },
    {
        "id": "14d733a8.cacc8c",
        "type": "link out",
        "z": "e6b13f10.8052e",
        "name": "",
        "links": [
            "2a66f8e7.3bda18"
        ],
        "x": 275,
        "y": 200,
        "wires": []
    },
    {
        "id": "4d82c775.4ce398",
        "type": "link out",
        "z": "e6b13f10.8052e",
        "name": "",
        "links": [
            "d9c74754.d9bd18"
        ],
        "x": 255,
        "y": 260,
        "wires": []
    },
    {
        "id": "2a66f8e7.3bda18",
        "type": "link in",
        "z": "e6b13f10.8052e",
        "name": "",
        "links": [
            "14d733a8.cacc8c"
        ],
        "x": 95,
        "y": 440,
        "wires": [
            [
                "137c30e9.90266f"
            ]
        ]
    },
    {
        "id": "4f775a51.d73514",
        "type": "function",
        "z": "e6b13f10.8052e",
        "name": "send message",
        "func": "msg.url = \"https://\"+env.get('BASE_URL')+'/_matrix/client/r0/rooms/' +env.get('ROOM_ID')+ '/send/m.room.message?access_token='+env.get('TOKEN')\nmsg.headers ={\n //   \"Authorization\" : \"Bearer sk_test_LYtqjhDKfkXv3fOmb4PT4va400SSWORV4p\",\n    \"Content-type\": \"application/json\"\n}\nmsg.payload={\n        \"body\": \"There is a new event on the github project:  \"+msg.issue_git, //\"This is an example text message\",\n        \"msgtype\": \"m.text\"\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 320,
        "wires": [
            [
                "779c6c5.c934094"
            ]
        ]
    },
    {
        "id": "779c6c5.c934094",
        "type": "http request",
        "z": "e6b13f10.8052e",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 740,
        "y": 320,
        "wires": [
            [
                "190058ea.b598a7"
            ]
        ]
    },
    {
        "id": "6a9ee445.b61abc",
        "type": "change",
        "z": "e6b13f10.8052e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "issue_git",
                "pt": "msg",
                "to": "payload.repository.full_name",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "repo_url",
                "pt": "msg",
                "to": "payload.repository.html_url",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 320,
        "wires": [
            [
                "4f775a51.d73514",
                "3ed9b5d1.d61aaa"
            ]
        ]
    },
    {
        "id": "190058ea.b598a7",
        "type": "debug",
        "z": "e6b13f10.8052e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 910,
        "y": 320,
        "wires": []
    },
    {
        "id": "d9c74754.d9bd18",
        "type": "link in",
        "z": "e6b13f10.8052e",
        "name": "",
        "links": [
            "4d82c775.4ce398"
        ],
        "x": 135,
        "y": 320,
        "wires": [
            [
                "6a9ee445.b61abc"
            ]
        ]
    },
    {
        "id": "f94e39f.97a3fc8",
        "type": "function",
        "z": "e6b13f10.8052e",
        "name": "send message",
        "func": "msg.url = \"https://\"+env.get('BASE_URL')+'/_matrix/client/r0/rooms/' +env.get('ROOM_ID')+ '/send/m.room.message?access_token='+env.get('TOKEN')\nmsg.headers ={\n //   \"Authorization\" : \"Bearer sk_test_LYtqjhDKfkXv3fOmb4PT4va400SSWORV4p\",\n    \"Content-type\": \"application/json\"\n}\nmsg.payload={\n        \"body\": \"Repo url:  \"+msg.repo_url, //\"This is an example text message\",\n        \"msgtype\": \"m.text\"\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 360,
        "wires": [
            [
                "779c6c5.c934094"
            ]
        ]
    },
    {
        "id": "3ed9b5d1.d61aaa",
        "type": "delay",
        "z": "e6b13f10.8052e",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 395,
        "y": 360,
        "wires": [
            [
                "f94e39f.97a3fc8"
            ]
        ],
        "l": false
    },
    {
        "id": "e8dc67b3.397638",
        "type": "function",
        "z": "da280c12.ece96",
        "name": "send message",
        "func": "msg.url = \"https://\"+env.get('BASE_URL')+'/_matrix/client/r0/rooms/' +env.get('ROOM_ID')+ '/send/m.room.message?access_token='+env.get('TOKEN')\nmsg.headers ={\n //   \"Authorization\" : \"Bearer sk_test_LYtqjhDKfkXv3fOmb4PT4va400SSWORV4p\",\n    \"Content-type\": \"application/json\"\n}\nmsg.payload={\n        \"body\": \"A new support ticket is created:  \"+msg.ticket_subject, //\"This is an example text message\",\n        \"msgtype\": \"m.text\"\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 240,
        "wires": [
            [
                "e9ba707f.95d7d"
            ]
        ]
    },
    {
        "id": "e9ba707f.95d7d",
        "type": "http request",
        "z": "da280c12.ece96",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 680,
        "y": 240,
        "wires": [
            [
                "a947fca7.a3bcd"
            ]
        ]
    },
    {
        "id": "3b036875.8ffaf8",
        "type": "function",
        "z": "da280c12.ece96",
        "name": "send message",
        "func": "msg.url = \"https://\"+env.get('BASE_URL')+'/_matrix/client/r0/rooms/' +env.get('ROOM_ID')+ '/send/m.room.message?access_token='+env.get('TOKEN')\nmsg.headers ={\n //   \"Authorization\" : \"Bearer sk_test_LYtqjhDKfkXv3fOmb4PT4va400SSWORV4p\",\n    \"Content-type\": \"application/json\"\n}\nmsg.payload={\n        \"body\": \"Ticket url:  \"+msg.ticket_url, //\"This is an example text message\",\n        \"msgtype\": \"m.text\"\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 300,
        "wires": [
            [
                "e9ba707f.95d7d"
            ]
        ]
    },
    {
        "id": "ca987c30.77825",
        "type": "delay",
        "z": "da280c12.ece96",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 355,
        "y": 300,
        "wires": [
            [
                "3b036875.8ffaf8"
            ]
        ],
        "l": false
    },
    {
        "id": "30797f84.93acf",
        "type": "change",
        "z": "da280c12.ece96",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ticket_subject",
                "pt": "msg",
                "to": "payload.freshdesk_webhook.ticket_subject",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ticket_description",
                "pt": "msg",
                "to": "payload.freshdesk_webhook.ticket_description",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ticket_url",
                "pt": "msg",
                "to": "payload.freshdesk_webhook.ticket_url",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 240,
        "wires": [
            [
                "e8dc67b3.397638",
                "ca987c30.77825"
            ]
        ]
    },
    {
        "id": "a947fca7.a3bcd",
        "type": "debug",
        "z": "da280c12.ece96",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 850,
        "y": 300,
        "wires": []
    },
    {
        "id": "46c453b.a0a90ac",
        "type": "http response",
        "z": "da280c12.ece96",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 260,
        "y": 180,
        "wires": []
    },
    {
        "id": "3b2b6d2c.c5d8d2",
        "type": "subflow:da280c12.ece96",
        "z": "dd87857a.016a18",
        "name": "",
        "env": [],
        "x": 300,
        "y": 120,
        "wires": [
            [
                "198257ab.04a658"
            ],
            []
        ]
    },
    {
        "id": "9d0bc6e.2546e38",
        "type": "http in",
        "z": "dd87857a.016a18",
        "name": "",
        "url": "/fresh",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 120,
        "wires": [
            [
                "3b2b6d2c.c5d8d2"
            ]
        ]
    },
    {
        "id": "c55d99ef.874608",
        "type": "comment",
        "z": "dd87857a.016a18",
        "name": "Framework",
        "info": "Framework: \n\n1-Trigger (slash command, action on msg, menu, text msg, webhook, response from api call, cron job, trigger (for testing))\n\n2- Response/acknowledge (200 if webhook, notif if action takes time)\n\n3- Condition, filter - busines rule (type of request, use swich node, custom function (blocky)\n\n4- Data Manipulation: prepare the payload that will be use for the Actions & Notification\n\n5- Action-s (form to display, api call)\n\n6- Notification message (channel, external service, debug node,..)\n\n",
        "x": 920,
        "y": 60,
        "wires": []
    },
    {
        "id": "198257ab.04a658",
        "type": "link out",
        "z": "dd87857a.016a18",
        "name": "",
        "links": [
            "eb72a46f.6e95d8",
            "97e7ce4f.d82ea"
        ],
        "x": 455,
        "y": 120,
        "wires": []
    },
    {
        "id": "eb72a46f.6e95d8",
        "type": "link in",
        "z": "dd87857a.016a18",
        "name": "",
        "links": [
            "198257ab.04a658"
        ],
        "x": 95,
        "y": 320,
        "wires": [
            [
                "1248707e.65bdc"
            ]
        ]
    },
    {
        "id": "24b2fe2.74ff902",
        "type": "comment",
        "z": "dd87857a.016a18",
        "name": "Trigger, aknowledge, filter, send notif",
        "info": "",
        "x": 200,
        "y": 160,
        "wires": []
    },
    {
        "id": "4487ff5c.37789",
        "type": "change",
        "z": "dd87857a.016a18",
        "name": "Set trello card infos",
        "rules": [
            {
                "t": "set",
                "p": "ticket_subject",
                "pt": "msg",
                "to": "payload.freshdesk_webhook.ticket_subject",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ticket_description",
                "pt": "msg",
                "to": "payload.freshdesk_webhook.ticket_description",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ticket_url",
                "pt": "msg",
                "to": "payload.freshdesk_webhook.ticket_url",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 320,
        "wires": [
            [
                "fe88edb0.c74af"
            ]
        ]
    },
    {
        "id": "68739a5e.165f84",
        "type": "comment",
        "z": "dd87857a.016a18",
        "name": "Condition, filter",
        "info": "",
        "x": 160,
        "y": 360,
        "wires": []
    },
    {
        "id": "1248707e.65bdc",
        "type": "switch",
        "z": "dd87857a.016a18",
        "name": "is feature request",
        "property": "payload.freshdesk_webhook.ticket_subject",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "feature request",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 240,
        "y": 320,
        "wires": [
            [
                "4487ff5c.37789"
            ]
        ]
    },
    {
        "id": "8b007de2.ec553",
        "type": "comment",
        "z": "dd87857a.016a18",
        "name": "1- Send notification to room when a support ticket is received",
        "info": "",
        "x": 280,
        "y": 80,
        "wires": []
    },
    {
        "id": "164b211e.f074df",
        "type": "debug",
        "z": "dd87857a.016a18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 910,
        "y": 300,
        "wires": []
    },
    {
        "id": "41a0abba.95d314",
        "type": "comment",
        "z": "dd87857a.016a18",
        "name": "https://trello.com/b/<boardid>/testing.json",
        "info": "",
        "x": 240,
        "y": 440,
        "wires": []
    },
    {
        "id": "f14f7d4d.58689",
        "type": "comment",
        "z": "dd87857a.016a18",
        "name": "https://developers.trello.com/reference/#cards-2",
        "info": "",
        "x": 260,
        "y": 400,
        "wires": []
    },
    {
        "id": "2fb9ab3f.7c9154",
        "type": "http in",
        "z": "dd87857a.016a18",
        "name": "",
        "url": "/github",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 1080,
        "wires": [
            [
                "4117b540.8100bc",
                "8737a7d3.abe578"
            ]
        ]
    },
    {
        "id": "4117b540.8100bc",
        "type": "debug",
        "z": "dd87857a.016a18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 390,
        "y": 1120,
        "wires": []
    },
    {
        "id": "8737a7d3.abe578",
        "type": "subflow:e6b13f10.8052e",
        "z": "dd87857a.016a18",
        "name": "",
        "env": [
            {
                "name": "ROOM_ID",
                "value": "!LAMIpamyCBxUOVQhii:m.tekos.co",
                "type": "str"
            }
        ],
        "x": 410,
        "y": 1080,
        "wires": []
    },
    {
        "id": "a1ddb0d0.59a47",
        "type": "comment",
        "z": "dd87857a.016a18",
        "name": "Create a Trello card when the subject is a feature request",
        "info": "",
        "x": 290,
        "y": 280,
        "wires": []
    },
    {
        "id": "fe88edb0.c74af",
        "type": "subflow:e019008a.c0745",
        "z": "dd87857a.016a18",
        "name": "",
        "env": [
            {
                "name": "name",
                "value": "Tekos Test card (switch node when testing)",
                "type": "str"
            },
            {
                "name": "desc",
                "value": "description2 (switch node when testing)",
                "type": "str"
            },
            {
                "name": "key",
                "value": "TRELLO_KEY",
                "type": "env"
            },
            {
                "name": "token",
                "value": "TRELLO_TOKEN",
                "type": "env"
            }
        ],
        "x": 700,
        "y": 320,
        "wires": [
            [
                "164b211e.f074df"
            ],
            []
        ]
    },
    {
        "id": "c42bbd37.3973f",
        "type": "comment",
        "z": "dd87857a.016a18",
        "name": "2.2- Create a contact in Pipedrive when a new customer is created in Stripe",
        "info": "Create a webhook in\n\nhttps://dashboard.stripe.com/test/webhooks",
        "x": 320,
        "y": 560,
        "wires": []
    },
    {
        "id": "dedce5c9.207368",
        "type": "comment",
        "z": "dd87857a.016a18",
        "name": "3- Get A notification when a new issue is created in Github",
        "info": "",
        "x": 290,
        "y": 1040,
        "wires": []
    },
    {
        "id": "25cb027f.52e48e",
        "type": "subflow:d21e98ba.9eb0e8",
        "z": "dd87857a.016a18",
        "name": "",
        "env": [
            {
                "name": "pipedrive_apikey",
                "value": "PIPEDRIVE_KEY",
                "type": "env"
            }
        ],
        "x": 720,
        "y": 880,
        "wires": [
            [
                "b0eec898.41b678"
            ]
        ]
    },
    {
        "id": "b0eec898.41b678",
        "type": "debug",
        "z": "dd87857a.016a18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 930,
        "y": 880,
        "wires": []
    },
    {
        "id": "6e0689f6.d80cb8",
        "type": "inject",
        "z": "dd87857a.016a18",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 280,
        "y": 940,
        "wires": [
            [
                "5bd1d070.8de08"
            ]
        ]
    },
    {
        "id": "3a1a7bb.8f71b84",
        "type": "node-red-contrib-httpauth",
        "z": "dd87857a.016a18",
        "name": "auth",
        "file": "",
        "cred": "",
        "authType": "Basic",
        "realm": "tekos",
        "username": "tekos",
        "password": "tekos",
        "hashed": false,
        "x": 230,
        "y": 720,
        "wires": [
            [
                "b6481621.fb8ab8"
            ]
        ]
    },
    {
        "id": "a5310b91.86f508",
        "type": "http in",
        "z": "dd87857a.016a18",
        "name": "",
        "url": "/stripe",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 640,
        "wires": [
            [
                "63cce4e2.08149c",
                "3a1a7bb.8f71b84",
                "6a702971.15c7d8",
                "e7daf4d8.d3a538"
            ]
        ]
    },
    {
        "id": "b6481621.fb8ab8",
        "type": "http response",
        "z": "dd87857a.016a18",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 360,
        "y": 720,
        "wires": []
    },
    {
        "id": "63cce4e2.08149c",
        "type": "debug",
        "z": "dd87857a.016a18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 330,
        "y": 600,
        "wires": []
    },
    {
        "id": "fe9dbb5.ca9d748",
        "type": "switch",
        "z": "dd87857a.016a18",
        "name": "Filter on customer created",
        "property": "payload.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "customer.created",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 230,
        "y": 880,
        "wires": [
            [
                "5bd1d070.8de08"
            ],
            []
        ]
    },
    {
        "id": "5bd1d070.8de08",
        "type": "change",
        "z": "dd87857a.016a18",
        "name": "Set Contact infos",
        "rules": [
            {
                "t": "set",
                "p": "email",
                "pt": "msg",
                "to": "payload.data.object.email",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "name",
                "pt": "msg",
                "to": "payload.data.object.name",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 880,
        "wires": [
            [
                "25cb027f.52e48e"
            ]
        ]
    },
    {
        "id": "6a702971.15c7d8",
        "type": "link out",
        "z": "dd87857a.016a18",
        "name": "",
        "links": [
            "4945d2f1.35952c"
        ],
        "x": 255,
        "y": 680,
        "wires": []
    },
    {
        "id": "4945d2f1.35952c",
        "type": "link in",
        "z": "dd87857a.016a18",
        "name": "",
        "links": [
            "6a702971.15c7d8"
        ],
        "x": 95,
        "y": 880,
        "wires": [
            [
                "fe9dbb5.ca9d748"
            ]
        ]
    },
    {
        "id": "c2c2a3c4.2bd0f",
        "type": "comment",
        "z": "dd87857a.016a18",
        "name": "2.1- Send me notifications for some events in Stripe",
        "info": "Create a webhook in\n\nhttps://dashboard.stripe.com/test/webhooks",
        "x": 250,
        "y": 520,
        "wires": []
    },
    {
        "id": "e7daf4d8.d3a538",
        "type": "switch",
        "z": "dd87857a.016a18",
        "name": "Filter on some events",
        "property": "payload.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "customer.created",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "order.payment_succeeded",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 420,
        "y": 640,
        "wires": [
            [
                "8626f946.f752d8"
            ],
            [
                "8626f946.f752d8"
            ],
            []
        ]
    },
    {
        "id": "8626f946.f752d8",
        "type": "subflow:cba1dc67.b8bb1",
        "z": "dd87857a.016a18",
        "name": "",
        "env": [],
        "x": 680,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "fb6d7000.5abf7",
        "type": "function",
        "z": "de3dd4d3.692a88",
        "name": "Get members",
        "func": "msg.url = env.get('BASE_URL')+\"/_matrix/client/r0/rooms/\"+msg.roomId+\"/joined_members?access_token=\"+env.get('Token')\nmsg.payload={\n\n\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 260,
        "wires": [
            [
                "ca02032f.6027f"
            ]
        ]
    },
    {
        "id": "ca02032f.6027f",
        "type": "http request",
        "z": "de3dd4d3.692a88",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 670,
        "y": 320,
        "wires": [
            [
                "d89a03d4.1236f"
            ]
        ]
    },
    {
        "id": "d89a03d4.1236f",
        "type": "function",
        "z": "de3dd4d3.692a88",
        "name": "calculate member's nb",
        "func": "\nvar joined = Object.keys(msg.payload.joined).length;\n\nif(joined == 1){\n    msg.payload = msg.messageContent;\n    return [msg,null,null];\n    \n}else if(joined == 2){\n    msg.payload = msg.messageContent;\n    return [null,msg,null];\n}else{\n    return [null,null,msg];\n}\n\nreturn msg;",
        "outputs": 3,
        "noerr": 0,
        "x": 800,
        "y": 240,
        "wires": [
            [
                "b270caf6.7552c8"
            ],
            [
                "b270caf6.7552c8"
            ],
            []
        ],
        "icon": "font-awesome/fa-thumbs-o-down"
    },
    {
        "id": "7008d4c5.b1b1ac",
        "type": "switch",
        "z": "de3dd4d3.692a88",
        "name": "New Interaction ?",
        "property": "room",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 147.99998092651367,
        "y": 83.99998664855957,
        "wires": [
            [
                "cb4a65c4.8d7068"
            ],
            [
                "d66255cc.f9ec78"
            ]
        ],
        "outputLabels": [
            "",
            "existing interaction"
        ]
    },
    {
        "id": "a92b7c03.cad3",
        "type": "function",
        "z": "de3dd4d3.692a88",
        "name": "Set Room ID",
        "func": "msg.roomId= msg.room\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 532,
        "y": 44,
        "wires": [
            [
                "61e16f10.be81",
                "22a34f18.660b7"
            ]
        ],
        "outputLabels": [
            "new room"
        ]
    },
    {
        "id": "99211680.6c84d8",
        "type": "function",
        "z": "de3dd4d3.692a88",
        "name": "is Dierct message (@bot) ***?",
        "func": "\nvar str = msg.event.event.content.formatted_body;\nvar strmobile = msg.event.event.content.body;\nvar bot = env.get(\"Bot\");\nvar botname = env.get(\"Bot_name\");\nvar strtxt =   msg.payload;\n\nif(str){\n    if(str.includes(bot)){\n        strtxt = strtxt.substring(strtxt.indexOf(\":\") + 1); // remove all text before \":\" , that means delete the bot name from the payload\n        strtxt = strtxt.trim(); // remove any spaces if found\n\n        msg.payload = strtxt;\n         return[msg,null,null]\n    }\n   \n}else if(strmobile.includes(botname)){\n     strtxt = strtxt.substring(strtxt.indexOf(\":\") + 1); // remove all text before \":\" , that means delete the bot name from the payload\n        strtxt = strtxt.trim(); // remove any spaces if found\n\n        msg.payload = strtxt;\n         return[null,msg,null]\n    \n}\n\nelse{\n    \n    return[null,null,msg]\n}\nreturn msg;",
        "outputs": 3,
        "noerr": 0,
        "x": 150,
        "y": 220,
        "wires": [
            [],
            [
                "f34ecb0.203f338",
                "fb6d7000.5abf7"
            ],
            [
                "fb6d7000.5abf7"
            ]
        ],
        "icon": "node-red/switch.svg"
    },
    {
        "id": "d66255cc.f9ec78",
        "type": "switch",
        "z": "de3dd4d3.692a88",
        "name": "",
        "property": "event.event.content.msgtype",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "m.image",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "m.file",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 160,
        "y": 154,
        "wires": [
            [],
            [],
            [
                "99211680.6c84d8"
            ]
        ]
    },
    {
        "id": "a887adcf.e10a7",
        "type": "link out",
        "z": "de3dd4d3.692a88",
        "name": "",
        "links": [
            "41730a7f.ec2734"
        ],
        "x": 1215,
        "y": 260,
        "wires": []
    },
    {
        "id": "41730a7f.ec2734",
        "type": "link in",
        "z": "de3dd4d3.692a88",
        "name": "",
        "links": [
            "a887adcf.e10a7"
        ],
        "x": 95,
        "y": 320,
        "wires": [
            [
                "a8822083.45659"
            ]
        ]
    },
    {
        "id": "a8822083.45659",
        "type": "function",
        "z": "de3dd4d3.692a88",
        "name": "pending step found ! ",
        "func": "\nvar data = global.get(msg.roomXD);\nvar pending = data.pendingstep;\n\ndata[pending] = msg.payload;\ndelete data.pendingstep;\nglobal.set(msg.roomXD,data);\n\n\nmsg.step = pending;\nmsg.stepcontent = msg.payload;\n\n\n data = global.get(msg.roomXD);\n\n \n \nif(data[\"STEP\"] && data.hasOwnProperty(data[\"STEP\"])){\n    data = global.get(msg.roomXD);\n    delete data[\"STEP\"];\n    global.set(msg.roomXD,data);\n}\n\n\n\nif(data.STEP){\n        msg.currentstep = data.STEP\n\n         return[msg,null]; // 4\n    }else{\n        return [null,msg];\n    }\n",
        "outputs": 2,
        "noerr": 0,
        "x": 255,
        "y": 320,
        "wires": [
            [
                "4b4b0532.6a475c"
            ],
            []
        ]
    },
    {
        "id": "61e16f10.be81",
        "type": "debug",
        "z": "de3dd4d3.692a88",
        "name": "what is room",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 890,
        "y": 40,
        "wires": []
    },
    {
        "id": "b270caf6.7552c8",
        "type": "function",
        "z": "de3dd4d3.692a88",
        "name": "pending step ?",
        "func": "var roomId = msg.roomId;\nroomId= roomId.substr(0, roomId.indexOf(':'));\nif(!global.get(roomId)){\n    return[msg,null,null,null]; // 1\n}else{\n    \n    var data = global.get(roomId);\n    if(data.pendingstep){\n        msg.roomXD = roomId;\n        return [null,null,msg,null]; // 3\n    }else if(data.STEP){\n        msg.roomXD = roomId;\n        msg.currentstep = data.STEP\n         return[null,null,null,msg]; // 4\n    }else{\n   return[null,msg,null,null]; // 2\n\n    }\n}\n\nreturn msg;",
        "outputs": 4,
        "noerr": 0,
        "x": 1040,
        "y": 240,
        "wires": [
            [],
            [],
            [
                "a887adcf.e10a7"
            ],
            []
        ],
        "icon": "node-red/switch.svg"
    },
    {
        "id": "4b4b0532.6a475c",
        "type": "link out",
        "z": "de3dd4d3.692a88",
        "name": "",
        "links": [
            "622d2936.cb07c8"
        ],
        "x": 415,
        "y": 300,
        "wires": []
    },
    {
        "id": "622d2936.cb07c8",
        "type": "link in",
        "z": "de3dd4d3.692a88",
        "name": "",
        "links": [
            "4b4b0532.6a475c"
        ],
        "x": 1215,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "cb4a65c4.8d7068",
        "type": "switch",
        "z": "de3dd4d3.692a88",
        "name": "",
        "property": "event.event.unsigned.prev_content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 380,
        "y": 44,
        "wires": [
            [
                "a92b7c03.cad3"
            ],
            []
        ]
    },
    {
        "id": "22a34f18.660b7",
        "type": "function",
        "z": "de3dd4d3.692a88",
        "name": "Matrix API",
        "func": "\nif(msg.roomId && env.get(\"TAG\")){\n    msg.header={\n        \"Content-Type\": \"application/json\"\n\n    }\n    msg.url = \"https://m.tekos.co/_matrix/client/r0/user/\"+env.get(\"Bot\")+\"/rooms/\"+msg.roomId+\"/tags/\"+env.get('TAG')+\"?access_token=\"+env.get('Token')\nmsg.payload = {\n  \"order\": 0.25\n}\n    return[msg,null]\n}else{\n    return[null,msg]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 120,
        "wires": [
            [
                "f3fa7634.3255b8"
            ]
        ]
    },
    {
        "id": "f3fa7634.3255b8",
        "type": "http request",
        "z": "de3dd4d3.692a88",
        "name": "",
        "method": "PUT",
        "ret": "obj",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 850,
        "y": 120,
        "wires": [
            [
                "ab590cf4.55617"
            ]
        ]
    },
    {
        "id": "ab590cf4.55617",
        "type": "debug",
        "z": "de3dd4d3.692a88",
        "name": "tags",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1010,
        "y": 120,
        "wires": []
    },
    {
        "id": "f34ecb0.203f338",
        "type": "debug",
        "z": "de3dd4d3.692a88",
        "name": "track",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 550,
        "y": 220,
        "wires": []
    },
    {
        "id": "373c9327.6b05fc",
        "type": "subflow:de3dd4d3.692a88",
        "z": "5a2f52ce.f38c4c",
        "name": "interaction",
        "env": [
            {
                "name": "BASE_URL",
                "value": "m.tekos.co",
                "type": "str"
            }
        ],
        "x": 290,
        "y": 280,
        "wires": [
            [
                "5b5fbe9d.e264c"
            ],
            [
                "9db1d45b.ea3728"
            ],
            [
                "9db1d45b.ea3728"
            ],
            [],
            [],
            []
        ]
    },
    {
        "id": "3fcb8209.30248e",
        "type": "chatbot-generic-card",
        "z": "5a2f52ce.f38c4c",
        "name": "card 1",
        "title": "card header",
        "subtitle": "Subt",
        "imageUrl": "https://broaddrivehosting.net/wp-content/uploads/2018/06/icon-group-chat.png",
        "sharable": true,
        "aspectRatio": "horizontal",
        "buttons": [
            {
                "type": "postback",
                "label": "option 1",
                "value": "option 1 value",
                "alert": false
            }
        ],
        "x": 700,
        "y": 960,
        "wires": [
            [
                "4d11e437.a8d4bc"
            ]
        ]
    },
    {
        "id": "dd4aec2.6e6b41",
        "type": "link in",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "46140ab9.6ac004"
        ],
        "x": 595,
        "y": 940,
        "wires": [
            [
                "3fcb8209.30248e"
            ]
        ]
    },
    {
        "id": "4d11e437.a8d4bc",
        "type": "chatbot-generic-card",
        "z": "5a2f52ce.f38c4c",
        "name": "card 1",
        "title": "card header 2",
        "subtitle": "Subt 2",
        "imageUrl": "https://cdn2.iconfinder.com/data/icons/explore-and-analysis-2/64/76-512.png",
        "sharable": true,
        "aspectRatio": "horizontal",
        "buttons": [
            {
                "type": "postback",
                "label": "option 2",
                "value": "option 2 value",
                "alert": false
            }
        ],
        "x": 830,
        "y": 960,
        "wires": [
            [
                "d8e35b30.738008"
            ]
        ]
    },
    {
        "id": "d8e35b30.738008",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "335b62a4.f6bf4e"
        ],
        "x": 935,
        "y": 960,
        "wires": []
    },
    {
        "id": "46140ab9.6ac004",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "dd4aec2.6e6b41"
        ],
        "x": 475,
        "y": 1140,
        "wires": []
    },
    {
        "id": "ba6819c3.2f26b8",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [],
        "x": 475,
        "y": 1180,
        "wires": []
    },
    {
        "id": "eb2e8e6e.48a5",
        "type": "link out",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "28e175b1.d0150a"
        ],
        "x": 535,
        "y": 1220,
        "wires": []
    },
    {
        "id": "28e175b1.d0150a",
        "type": "link in",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "links": [
            "eb2e8e6e.48a5"
        ],
        "x": 695,
        "y": 1380,
        "wires": [
            [
                "3ac66eca.caf222"
            ]
        ]
    },
    {
        "id": "af44ac6c.9f3e",
        "type": "chatbot-generic-form",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "title": "Form Sample",
        "subtitle": "Subtitle",
        "formId": "1",
        "posturl": "https://tekosdemo.tekos.co/form1",
        "action": "Send",
        "cancel": "Cancel",
        "options": [
            {
                "label": "Name",
                "value": "name",
                "maxLength": "",
                "type": "text",
                "list": "",
                "required": true
            },
            {
                "label": "Position",
                "value": "position",
                "maxLength": "",
                "type": "list",
                "list": "ceo: CEO, manager:Manager",
                "required": false
            }
        ],
        "formValue": {
            "name": "",
            "position": ""
        },
        "payload": "",
        "topic": "",
        "x": 760,
        "y": 1040,
        "wires": [
            [
                "44d5a407.d1b1dc"
            ]
        ]
    },
    {
        "id": "96f82e6b.f7f28",
        "type": "http in",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "url": "/form1",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 690,
        "y": 1100,
        "wires": [
            [
                "5a6ca079.9ff82",
                "11292cad.927603"
            ]
        ]
    },
    {
        "id": "5a6ca079.9ff82",
        "type": "http response",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 850,
        "y": 1160,
        "wires": []
    },
    {
        "id": "11292cad.927603",
        "type": "debug",
        "z": "5a2f52ce.f38c4c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 890,
        "y": 1080,
        "wires": []
    },
    {
        "id": "57131aa.5d5d4e4",
        "type": "debug",
        "z": "f7d437ec.9be078",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 540,
        "y": 120,
        "wires": []
    }
]
